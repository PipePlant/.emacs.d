use strict;
use warnings;
use Data::Dumper;
use Encode;
use JSON;
use feature qw (say);

# `````````
my %wordUwid = %{GetWordUwidList()};
$wordUwid{"作法自弊"} = 1077423407; #sepcial

my %wordAudio = %{GetWordAuidoList()};
# `````````

my $import_file = "./tmp_data/sccs_hycycd_import_data.txt";
my $details_file = "./finally_data/sccs_hycycd_details_full.txt";

open my $IMPORT ,"<", $import_file or die $!;
open my $DETAILS ,">", $details_file or die $!;

while (<$IMPORT>) {

    chomp;
    my $line = $_;
    
    # ``` 跳转词汇处理 ```
    if ($line =~ /见“(.+?)”/) {

        $line = ChangeSeeWord($1,$line);
    }

    # ``` 更改发音字段 ```
    $line =~ /"name":"(.*)\.mp3"/;
    $line = ChangeAudioName($1,$line);
    
    say $DETAILS $line;
}

close $IMPORT;
close $DETAILS;

sub GetWordUwidList {

    my %wuList;

    my $word_uwid_list = "./tmp_data/sccs_hycycd_word_uwid_list.txt";
    open my $WU_LIST ,"<", $word_uwid_list or die $!;
    
    while (<$WU_LIST>) {

        $_ =~ /(.*)\t(.*)/;
        $wuList{$1} = $2;
    }
    
    close $WU_LIST;

    return \%wuList;
};

sub GetWordAudioList {

    my %waList;

    my $word_audio_list = "./audio/log/utf8Table.txt";
    open my $WA_LIST ,"<", $word_audio_list or die $!;
    
    while (<$WA_LIST>) {

        $_ =~ /(.*)\t(.*)/;
        $waList{$1} = $2;
    }
    
    close $WA_LIST;

    return \%waList;
};

sub ChangeSeeWord {

    my ($line,$seeWord) = @_;
    my $seeUwid = $wordUwid{$seeWord};
    
    $line =~ s/见“$seeWord”/见“<see subuwid='$seeUwid'>$seeWord<\/see>”/g;

    return $line;
};

sub ChangeAudioName {

    my ($oldAudio,$line) = @_;
    my $newAudio = $wordAudio{$oldAudio};

    $line =~ s/"name":"$oldAudio\.mp3"/"name":"$newAudio\.mp3"/g;

    return $line;
};
