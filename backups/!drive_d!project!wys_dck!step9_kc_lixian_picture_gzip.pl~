use strict;
use warnings;
use Data::Dumper;
use File::Copy;
use Archive::Tar;
use File::Find;
use File::Basename;
use Cwd;
use feature qw (say);
# require "E:/eclipse_c++/common/step0_changeName.pl";

my $dictName = "wys_dckxxfo";
# my $dictName = "wys_dckxxft";
# my $dictName = "wys_dckcz";
# my $dictName = "wys_dckgz";

my $dirRoot= "D:/project/wys_dck/";
my $dirDict = $dirRoot.$dictName."v209_packages/";
my $dirOldAudio = $dirRoot.$dictName."_resources/";
#my $dirOldAudio = "";
if(!-e($dirRoot.$dictName."_kc_lixian_gzip/"))
{
    mkdir $dirRoot.$dictName."_kc_lixian_gzip";
}

#########################将.dict放进对应的文件夹################################
opendir DIRIN,$dirDict or die $!;
#print $dirOldAudio;
opendir AIN, $dirOldAudio or die $!;

my @audio = readdir(AIN);
my $j = 0;
my $num = 10;

my $kca = "";
my $kcb = "";
my $kcc = "";
foreach my $f (readdir(DIRIN))
{
   if($f =~ m/^(.+?)\.dict/)
   {
   		my $fileDictName = $1;
        my $dirNewAudio = $dirDict.$fileDictName;
        mkdir $dirNewAudio;

        my $prefixAudio;
        if($fileDictName =~ m/kc_kca(.+?)_kcb(.+?)_kcc(.+?)$/)
        {
        	my $S1 = $1;
        	if($dictName eq "hdlg_ryfyrm" || $dictName eq "hdlg_hyfyrm")
        	{
        		$S1=$1+1;
        	}
        	$prefixAudio = $S1."-".$2."-".$3;
        }elsif($fileDictName =~ m/kc_kca(.+?)_kcb(.+?)$/)
        {
        	$prefixAudio = $1."-".$2;
        }elsif($fileDictName =~ m/kc_kca(.+?)$/)
        {
        	$prefixAudio = $1;
        }

		my $out = $dirNewAudio."/filelist.txt";
		open OUT, ">", $out or die $!;
		my $count = 0;
		for(my $i = 0; $i < @audio ;$i++)
		{
			my $audio = $audio[$i];
			if($audio =~ m/\.$/)
			{
				next;
			}
#			print $i."\t".@audio."\t".$audio."\t".$audioName."\n";
			if($audio =~ m/^$prefixAudio/)
			{
				$count++;
				my $fileOldAudio = $dirOldAudio.$audio;
        $audio =~ /_(.*)$/;
        my $name = $1;
        copy($fileOldAudio,$dirNewAudio);
				print OUT $name."\n";
        rename "$dirNewAudio/$audio","$dirNewAudio/$name";
			}
		}
		$count = int(($count)/2);
		print $prefixAudio."\t".$count."\n";
        copy($dirDict.$fileDictName.".dict",$dirNewAudio);
        print OUT $fileDictName.".dict\n";
        close OUT;
    }
}
closedir DIRIN;
print "打包中，请稍等...\n";
chdir($dirRoot.$dictName."v209_packages/");
#my $dir=getcwd; #获取当前pl所在目录，这样你可以将这个pl文件放在任意文件夹下运行以获得文件总数
readsub($dirRoot.$dictName."v209_packages/");
sub readsub {
  my ($file_t) = @_;
  opendir(AA,$file_t) || return;
  my @list = readdir(AA);
  closedir (AA);#不递归打开文件夹,就第一层
  foreach my $file_to_act (sort @list){
      if ($file_to_act =~ m/\.dict/ or $file_to_act =~ m/\.pl/ or $file_to_act =~ m/\.tgz/) {   #如果是文件
          next;
      }
      elsif ($file_to_act =~ /^\.|\.$/) {   #如果是文件
          next;
      }
      elsif (-d $file_to_act) {#如果是子目录
         my $tar = Archive::Tar->new;
         opendir(AB,$file_to_act) || return;
         my @list1 = readdir(AB);
         closedir (AB);#不递归打开文件夹,就第一层
         foreach my $value (@list1){
            if ($value =~ /^\./) {   #如果是文件
               next;
            }elsif ($value  =~ m/\.pl/ or $value  =~ m/\.tgz/) {   #如果是文件
                next;
            }
            # if ($value =~ /_(.*\.(mp3|png|jpg))/) {

            #   my $name = $1;
            #   rename $value,$name;
            #   chdir($file_to_act);
            #   $tar->add_files($name);
            #   chdir("../");
            # }else {

              chdir($file_to_act);
              $tar->add_files($value);
              chdir("../");
            # }
         }
         $tar->write($dirRoot.$dictName."_kc_lixian_gzip/".$file_to_act.".tgz", COMPRESS_GZIP);
      }
   }
}
print "打包完成！\n";
print "\n".$dictName." step9 has finished!";
