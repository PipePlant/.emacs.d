use warnings;
use strict;
use Data::Dumper;
use feature qw(say);
use JSON;
use Encode;

my $json = new JSON;

my $inList = "./tmpdocument/luyin.txt";
my $inData = "./tmpdocument/wys_fycdfh_details_full.txt";
my $output = "./tmpdocument/wys_fycd.luyin.txt";

open my $LIST ,"<", $inList or die $!;
my @luyinArray = ();
while (<$LIST>) {
    @luyinArray = $_;    
}
close $LIST;

open my $DATA ,"<", $inData or die $!;
my %dataPron;
while (<$DATA>) {
    my $line = $_;
    $line =~ /(.*)\t(.*)\t(.*)/;
    my %item = %{$json->decode($3)};

    my $word = ${${$item{"body"}[0]}{"head"}}{"word"};
    $word =~ s/<sup>er<\/sup>/er/g;
	$word =~ s/<sup>.+?<\/sup>//g;
	$word =~ s/<sub>.+?<\/sub>//g;

    my $pron = "";
    if (exists ${${$item{"body"}[0]}{"head"}}{"symbol"}) {
        $pron = ${${$item{"body"}[0]}{"head"}}{"symbol"};
        $pron = ChangeUnicode($pron);
    }
    
    $dataPron{$word} = $pron;
}
close $DATA;

open my $OUT ,">", $output or die $!;
foreach my $luyinData (@luyinArray) {
    say $OUT $luyinData."\t".$dataPron{$luyinData};
}
close $OUT;

sub ChangeUnicode {
    my $data = shift;

    my $sa1 = encode("utf-8",chr(hex("0x".sprintf("%X",62160))));
    $data =~ s/$sa1/ɑ̃/g;
    my $sa2 = encode("utf-8",chr(hex("0x".sprintf("%X",62161))));
    $data =~ s/$sa2/ã/g;
    my $sc1 = encode("utf-8",chr(hex("0x".sprintf("%X",62162))));
    $data =~ s/$sc1/ɔ̃/g;
    my $soe1  = encode("utf-8",chr(hex("0x".sprintf("%X",62163))));
    $data =~ s/$soe1/œ̃/g;
    my $soe2 = encode("utf-8",chr(hex("0x".sprintf("%X",62164))));
    $data =~ s/$soe2/œ̃/g;
    my $soe3 = encode("utf-8",chr(hex("0x".sprintf("%X",62165))));
    $data =~ s/$soe3/œ̃/g;

    return $data;
};
