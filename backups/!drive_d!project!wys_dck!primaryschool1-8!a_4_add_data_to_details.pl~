use strict;
use warnings;
use Data::Dumper;
use Encode;
use JSON;
use feature qw(say);

my $json = new JSON;
AddDataToDetails(GetAdditionalData());

sub GetAdditionalData {
    my @dataArray = ();
    foreach my $bookNum (1 .. 12) {
        my $final_file = "./v2_data/final_data/1l".$bookNum."_additional_final.txt";
        open my $FINAL ,"<", $final_file or die $!;
        push @dataArray,<$FINAL>;
        close $FINAL;
    }
    return \@dataArray;
};

sub AddDataToDetails {
    my $addData = shift;
    my $in_details_file = "./tmpdocument/wys_dckxxfo_details_full.txt";
    my $out_details_file = "./tmpdocument/wys_dckxxfo_v2_details_full.txt";

    open my $IN ,"<", $in_details_file or die $!;
    open my $OUT ,">", $out_details_file or die $!;

    while (<$IN>) {
        if ($_ =~ /(.*)\t(.*)\t(.*)/) {
            my $word = $1;
            my $uwid = $2;
            my %item = %{$json->decode($3)};
            
            my $tmpAdd = shift @{$addData};
            $tmpAdd =~ /(.*)\t(.*)/;
            my $addWord = $1;
            my @addItem = @{$json->decode($2)};
            if ($word eq $addWord) {
                if (@addItem) {
                    ${$item{"body"}}{"book_data"} = \@addItem;
                }
                say $OUT $word."\t".$uwid."\t".$json->encode(\%item);
            } else {
                say $word."数据未匹配";
            }
        }
    }
    
    close $IN;
    close $OUT;
};
