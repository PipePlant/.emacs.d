use warnings;
use strict;
use Encode;
use Data::Dumper;
use JSON;
use File::Basename;
use feature qw(say);

my $tidy_file = "./tmp_data/shjd_hychsccj_tidy_data.txt";
my $details_file = "./tmp_data/shjd_hychsccj_tmp_details.txt";
my $struct_file = "./tmp_data/shjd_hychsccj_tmp_struct.txt";

open my $TIDY ,"<", $tidy_file or die $!;
open my $DETAILS ,">", $details_file or die $!;
open my $STRUCT ,">", $struct_file or die $!;

my $json = new JSON;
my %item = ();
my %indexNum = ("a" => 0, "b" => 0, "c" => 0, "d" => 0);
while (<$TIDY>) {
    chomp; 
    my $line = $_;
    
    if ($line eq ""
        or eof) {
        if (%item) {
            say $DETAILS $json->encode(\%item);
            $indexNum{"c"}++;
            $indexNum{"d"} = 0;
            %item = ();
        }
    } elsif ($line !~ /^(\t|\*|=)/) {
        my @tmpData = grep {$_ ne ""} (split /\t/,$line);
        my $object = "";
        my $index = "";
        
        if ($line =~ /\t\//) {
            # 例句型数据
            $object = SentenceTypeData(\@tmpData,$index);
        } else {
            # 单词型数据
            $object = WordTypeData(\@tmpData);
        }

        if ($tmpData[0] =~ /\[(.*)\]/) {
            if ($1 eq "例") {
                # 例句
                push @{$item{"liju"}},$object;
            } elsif ($1 eq "近") {
                # 近义
                push @{$item{"jinyi"}},$object;
            } elsif ($1 eq "反") {
                # 反义
                push @{$item{"fanyi"}},$object;
            } elsif ($1 eq "关") {
                # 关联
                push @{$item{"guanlian"}},$object;
            }
        } else {
            # 词条本体
            %item = %{$object};
        }
    } elsif ($line =~ /^\t(.*)/) {
        my $tmpStc = $1;
        if ($tmpStc =~ /新魅力/) {
            say $STRUCT "==> ".$indexNum{"c"};
            $indexNum{"a"}++;
            $indexNum{"b"} = 0;
            $indexNum{"c"} = 0;
            $indexNum{"d"} = 0;
            say $STRUCT "a\t".$tmpStc."\t".$indexNum{"a"};
        } else {
            say $STRUCT "==> ".$indexNum{"c"};
            $indexNum{"b"}++;
            $indexNum{"c"} = 0;
            $indexNum{"d"} = 0;
            say $STRUCT "b\t".$tmpStc."\t".$indexNum{"b"};
        }
    }
}
say $STRUCT "==> ".$indexNum{"c"};
close $TIDY;
close $DETAILS;
close $STRUCT;

sub WordTypeData {
    my $data = shift;
    my %obj = ();
    my $startOfData = "";
    $indexNum{"d"}++;
    my $audio = sprintf("%02s",$indexNum{"a"})."-".sprintf("%02s",$indexNum{"b"})."-".sprintf("%03s",$indexNum{"c"})."-".sprintf("%02s",$indexNum{"d"}).".mp3";
    
    if ((${$data}[0] =~ /\[/)) {
        $startOfData = shift @{$data};
    }
    for (my $var = 0; $var <= $#{$data}; $var++) {
        my $temporary = ${$data}[$var];
        if ($temporary =~ /^\(/) {
            # 发音
            push @{$obj{"pron"}},{"symbol" => $temporary, "lang" => "k", "name" => $audio};
        } elsif ($temporary =~ /^\【/) {
            # 词性
            push @{$obj{"sense"}},{"pos" => $temporary};
        } else {
            if ($var == 0) {
                # 词头
                $obj{"word"} = $temporary;
            } else {
                # 释义
                ${$obj{"sense"}[-1]}{"def"} = $temporary;
            }
        }
    }
    if ($startOfData) {
        unshift @{$data},$startOfData;
    }

    return \%obj;
};

sub SentenceTypeData {
    my $data = shift;
    my %obj = ();
    $indexNum{"d"}++;
    my $audio = sprintf("%02s",$indexNum{"a"})."-".sprintf("%02s",$indexNum{"b"})."-".sprintf("%03s",$indexNum{"c"})."-".sprintf("%02s",$indexNum{"d"}).".mp3";
    
    foreach my $temporary (@{$data}) {
        if ($temporary !~ /\[/) {
            if ($temporary =~ /\/(.*)/) {
                # 释义
                push @{$obj{"sense"}},{"def" =>  $1};
            } else {
                # 例句
                $obj{"word"} = $temporary;
            }
        }
    }
    # 发音
    push @{$obj{"pron"}},{"lang" => "k", "name" => $audio};
    
    return \%obj;
};
