use warnings;
use strict;
use Data::Dumper;
use feature qw(say);
use JSON;
use Encode;

my $in = "./school_list.txt";
my $provinces = "./ps_provinces.txt";
my $cities = "./ps_cities.txt";
my $areas = "./ps_areas.txt";
my $schools = "./ps_schools.txt";

my @municipality_id = qw(北京 天津 上海 重庆);
my @province_list = qw(黑龙江 吉林 辽宁 山东 山西 陕西 河北 河南 湖北 湖南 海南 江苏 江西 广东 广西 云南 贵州 四川 内蒙古 宁夏 甘肃 青海 西藏 新疆 安徽 浙江 福建 香港 澳门 台湾);

make_data();
# check();

sub make_data {

	open IN ,"< $in",or die $!;
	open PROV ,"> $provinces", or die $!;
	open CITY ,"> $cities",or die $!;
	open AREA ,"> $areas",or die $!;
	open SCHOOL ,"> $schools",or die $!;

	my $pNum = 10;
	my $cNum = 0;
	my $num = 0;	#学校数
	my $regionNum = 0;

	#两变量 存储市名和区名 为学校名称去重
	my $cName = "";
	my $aName = "";
	while (<IN>) {

		my $line = $_;

		if ($line =~ /"text":"(.+?)"/) {	#市、(区/县)的判断

			my $region = $1;
			$region =~ s/\s//g;
			$region =~ s/　//g;

			$line =~ /"id":(\d+)/;
			my $id = int $1;

			if ($region ~~ @province_list) {

				$pNum++;
				$cNum = 0;
				$regionNum = $pNum*10000;

				say PROV $regionNum."\t".$region;
			}elsif ($region ~~ @municipality_id) {

				$pNum++;
				$cNum = 1;
				$regionNum = $pNum*10000;

				say PROV $regionNum."\t".$region;

				$cName = $region."市";
				$regionNum = $pNum*10000+$cNum*100;
				say CITY $regionNum."\t".$region."市";
			}else {

				if ($id % 100 == 0) {

					++$cNum;
					$regionNum = $pNum*10000+$cNum*100;
					
					$cName = $region;
					say CITY $regionNum."\t".$region;
				}else {

					$regionNum ++;
					
					$aName = $region;
					say AREA $regionNum."\t".$region;
				}
			}

			$num = 0;
		}else {	#学校

			$line =~ /"cname":"(.+?)"/;
			my $region = $1;
			$region =~ s/\s//g;
			$region =~ s/　//g;
			$region =~ s/2小/二小/g;
			$region =~ s/\Q$cName\E//g;
			my $tmpRegion = $region;
			$region =~ s/\Q$aName\E//g;

			my $id = $regionNum;
			$id = ($id*10000)+(++$num);
			if ($region =~ /\w小学$/) {

				say SCHOOL $id."\t".$tmpRegion;
			}else {

				say SCHOOL $id."\t".$region;
			}
		}
	}

	close IN;
	close PROV;
	close CITY;
	close AREA;
	close SCHOOL;
};

sub check {

	open AREA ,"< $areas", or die $!;
	my %areaHash;
	while (<AREA>) {

		$_ =~ /(.*)\t(.*)/;
		$areaHash{$1} = $2;
	}
	close AREA;

	open SCHOOL ,"< $schools", or die $!;

	while (<SCHOOL>) {

		$_ =~ /^(\d{6})/;
		my $id = $1;

		unless (exists $areaHash{$id}) {

			say $id;
		}
	}

	close SCHOOL;
}
