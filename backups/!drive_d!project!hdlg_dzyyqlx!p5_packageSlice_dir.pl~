use strict;
use warnings;
use File::Copy;
use File::Path;
use Data::Dumper;
use Cwd;
use JSON;
use Digest::MD5::File qw(file_md5_hex);
use Digest::MD5 qw(md5_hex);
use Digest::MD5;

my $Dir="./hdlg_dzyyqlx_kc_lixian_gzip/";
my $inputDIR = "hdlg";
my $dtype="hdlg_dzyyqlx";
my $online_pa="-6920lc15psd";

#my $outputDIR="../lixianslice/".$inputDIR."_slice/";
#unless( -e "lixianslice/"){
#    mkdir "lixianslice/";
#}
#unless( -e $outputDIR){
#    mkdir $outputDIR;
#}
opendir(DH, $Dir) or die "Can't open: $!\n" ;
#读取指定文件夹下面的指定扩展名的文件名，保存到数组里。
#my @files = grep {/$Ext$/ && -f "$Dir/$_" } readdir(DH) ;
my @files = readdir(DH) ;
closedir(DH) ;
chdir($Dir) or die "Can't cd dir: $!\n" ;
#txt format:
#uwid\tver\tkey\tval
#open LOGOUT,"> dict_slice.log" or die $!;
#print Dumper(\@files);
#exit;
foreach my $inputFile(@files){
    #print Dumper(\@files);
    #my $inputFile = "kj_ecyx-b_all_aud.audio";

    #my $inputDIR = "";
    #echo $inputFile."\n";
    #$inputFile =$Dir.$inputFile;
    if($inputFile =~ m/\.$/){# or $inputFile =~ m/\.\.$/
        next;
    }
    if(-e $inputFile){
        print  "Start slice ".$inputFile."\n";
        my $slice_size = 1000*1024; #1000k
        
        my ($prefix,$posfix) = ($inputFile =~ m/^(.*?)\..*([^\.]+)$/);
       
        #print "111\t".$prefix."\t".$posfix."\n";
        #exit;
        #$prefix=$outputDIR;
        #$prefix.="";
        my %infoHash;
        my $secretKey = 'dIct.CnsEcRet';
        my $md5;# = file_md5_hex($inputFile);
        {
            open IN,"< $inputFile" or die $!;
            binmode(IN);
            local $/ = undef;
            my $buff = <IN>;
            #print length($buff),"\n";
            $md5 = md5_hex($buff.$secretKey);
            close IN;
        }
        my @crc = (0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);
        my $i = 0;
        my $pos = 0;
        
        #my $directory = $dtype."-cwa2m4qk1"."/".$prefix.".".substr($md5,0,8);
        my $directory = $dtype.$online_pa."/".$prefix.".".substr($md5,0,8);
        my $jpgHead = chr(0xff).chr(0xd8);
        my $jpgEnd = chr(0xff).chr(0xd9);
        
       #chdir($outputDIR);
        #print "1111111\t".$dir."\n";
        #exit;
        #print "222  $directory\n";
        unless( -e $directory){
            #mkdir $dtype."-cwa2m4qk1";
            mkdir $dtype.$online_pa;
            mkdir $directory;
            #mkdir $outputDIR.$directory;
        }
        
        my $slice_No = 0;
        open IN,"< $inputFile" or die $!;
        binmode IN;
        
        while(1){
            read(IN,my $buff,$slice_size);
            last if(length($buff) < 1);
            
            my %sliceHash;
            my @arr = split(//,$buff);
            my @subcrc = (0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);
            my $subi = 0;
            foreach my $t (@arr){
                $crc[$i++%16] ^= ord($t);
                $subcrc[$subi++%16] ^= ord($t);
            }
            
            my $subcrc = "";
            foreach my $c (@subcrc){
                $subcrc = sprintf("%s%02x",$subcrc,$c);
            }
            #print $slice_No,"\n";
            $sliceHash{ppos} = 2;
            $sliceHash{md5} = md5_hex($buff.$secretKey);
            $sliceHash{crc} = $subcrc;
            $sliceHash{pos} = $pos;
            $sliceHash{length} = length($buff);
            
            $pos += length($buff);
            
            $infoHash{slices}{$slice_No} = \%sliceHash;
            
            my $sliceFileName = sprintf("%02d%s.jpg",$slice_No,substr($sliceHash{md5},0,8));
            $sliceHash{name} = $sliceFileName;
            open SLICEOUT,"> $directory/$sliceFileName" or die $!;
            binmode SLICEOUT;
            print SLICEOUT $jpgHead;
            print SLICEOUT $buff;
            print SLICEOUT $jpgEnd;
            close SLICEOUT;
            #move($directory."/".$sliceFileName,$outputDIR.$directory) or die "The move operation failed: $!";
            #print LOGOUT "Finish produce small package slices: ".$inputFile."\n";
           $slice_No++;
        }
        close IN;
        #rmtree($directory);
        my $crc = "";
        foreach my $c (@crc){
            
            $crc = sprintf("%s%02x",$crc,$c);
        }
        
        $infoHash{length} = -s $inputFile;
        $infoHash{md5} = $md5;
        $infoHash{crc} = $crc;
        $infoHash{filename} = $inputFile;
        #$infoHash{url} = "http://bd.dfile.cn/file/dic/".$inputDIR.$inputFile;
        $infoHash{url} = "http://res.dfile.cn/bfile/".$inputDIR."/".$inputFile;
        $infoHash{ver} = time();
        
        my %mirrors;
        
        $mirrors{0}{url} = "http://dl.mingshukeji.cn/dic/".$directory."/";
        $mirrors{0}{weight} = 10;
        $mirrors{0}{priority} = 1;
        
        $mirrors{1}{url} = "http://dl.mingshukeji.cn/dic/".$directory."/";
        $mirrors{1}{weight} = 10;
        $mirrors{1}{priority} = 1;
        
        $mirrors{2}{url} = "http://dl.mingshukeji.cn/dic/".$directory."/";
        $mirrors{2}{weight} = 10;
        $mirrors{2}{priority} = 1;
        
        $mirrors{3}{url} = "http://dl.mingshukeji.cn/dic/".$directory."/";
        $mirrors{3}{weight} = 10;
        $mirrors{3}{priority} = 1;
        
        $mirrors{4}{url} = "http://dl.mingshukeji.cn/dic/".$directory."/";
        $mirrors{4}{weight} = 10;
        $mirrors{4}{priority} = 1;

        
        #$mirrors{1}{uri} = "/file/dic/$directory/";
        #$mirrors{1}{host} = "bd.dfile.cn";
        #$mirrors{1}{ip} = "180.168.35.182";
        #$mirrors{1}{header} = {"Accept-Encoding"=>"gzip, deflate",
        #                      "User-Agent"=>"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:19.0) Gecko/20100101 Firefox/19.0",
        #                      "Cookie"=>"uvid=UUgZbQS0cy/C"};
        #$mirrors{1}{weight} = 4;
        #$mirrors{1}{priority} = 1;
        
        $infoHash{mirrors} = \%mirrors;
        
        my $resultStr = encode_json(\%infoHash);
        #open OUT,"> ",$dtype."-cwa2m4qk1"."/".$prefix.".dsd.jpg" or die $!;
        
        ###```old system```###
        # open OUT,"> ",$dtype.$online_pa."/".$prefix.".dsd.jpg" or die $!;

        ###```new system```###
        $prefix =~ /(kc.*)/;
        my $newPreFix = $1;
        $newPreFix =~ s/kcz\-//g;
        open OUT,"> ",$dtype.$online_pa."/".$prefix.".dsd.jpg" or die $!;
        # open OUT,"> ",$dtype.$online_pa."/".$newPreFix or die $!;
        print OUT $resultStr;
        close OUT;
        #move($prefix.".dsd.jpg",$outputDIR)or die "The move operation failed: $!";
        #print Dumper(\%infoHash);
        print  "Finished Slice ".$inputFile."\n";

            
    }
    else{
        print  "error $inputFile\n";
    }
   
}    
#close LOGOUT;    
