use strict;
use warnings;
use JSON;
use Data::Dumper;
use Encode;
use feature qw (say);

my $json = new JSON;

my $tmp_data = "./tmp_data/hdlg_rcyynqjh_tmp.txt";
my $uniform_data = "./tmp_data/hdlg_rcyynqjh_importdata.txt";

open my $IN ,"<", $tmp_data or die $!;
open my $OUT ,">", $uniform_data or die $!;

my %buffer;
our $chapterNum = 0;
our $unitNum = 0;
our $levelNum = 0;
our $subNum = 0;

while (<$IN>) {

    my $line = $_;

    # ```chapter```
    if ($line =~ /{(C.*?)}(.+?){.*}/) {
        
        my $type = $1;
        my $data = $2;
        if ($type eq "C") {

            $buffer{"chapter"} = $data;
            $buffer{"index"} = GetIndex("chapter");
            $buffer{"chapter_number"} = $chapterNum;
        }
        else {

            $buffer{"chapter_name"} = $data;
            say $OUT $json->encode(\%buffer);
            undef %buffer;
        }
    }

    # ```unit```
    if ($line =~ /{(u.*?)}(.+?){.*}/) {
        
        my $type = $1;
        my $data = $2;
        if ($type eq "u") {

            $buffer{"unit"} = $data;
            $buffer{"index"} = GetIndex("unit");
            $buffer{"unit_number"} = $unitNum;
        }
        elsif ($type eq "um") {

             $buffer{"unit_name"} = $data;
        }
        else {

            $buffer{"unit_summary"} = $data;
            say $OUT $json->encode(\%buffer);
            undef %buffer;
        }
    }

    # ```level```
    if ($line =~ /(.+?){g\d+m}(.+?){\/g\d+m}/) {

        my $level = $1;
        my $levelName = $2;

        $buffer{"level"} = $level;
        $buffer{"level_name"} = $levelName;
        $buffer{"index"} = GetIndex("level");
        $buffer{"level_number"} = $levelNum;

        say $OUT $json->encode(\%buffer);
        undef %buffer;
    }

    # ```word```
    if ($line =~ /{(dc.*)}(.+?){.+?}/) {
        
        my $type = $1;
        my $data = $2;

        if ($type eq "dc") {
            
            $buffer{"word"} = $data;
            $buffer{"index"} = GetIndex("word");
        }
        else {
            
            $buffer{"WDdef"} = $data;
            say $OUT $json->encode(\%buffer);
            undef %buffer;
        }
    }

    # ```sentence```
    if ($line =~ /{sm}(.+?){.*}/) {

        $buffer{"STCinfo"} = $1;
        
        say $OUT $json->encode(\%buffer);
        undef %buffer;
    }
    if ($line =~ /{sz}(.+?){.*}/) {

        $buffer{"STCdef"} = $1;
    }
    if ($line =~ /{sy}(.+?){.*}/) {

        $buffer{"STCstc"} = $1;
        $buffer{"index"} = GetIndex("sentence");
        
        say $OUT $json->encode(\%buffer);
        undef %buffer;
    }

    # ```short dialogue```
    if ($line =~ /{qjt}(.+?){.*}/) {

        $buffer{"SENscene"} = $1;
        
        say $OUT $json->encode(\%buffer);
        undef %buffer;
    }
    if ($line =~ /{qjinfo}(.+?){.*}/) {

        $buffer{"SENinfo"} = $1;

        say $OUT $json->encode(\%buffer);
        undef %buffer;
    }
    if ($line =~ /{qjy}(.+?){.*}/) {

        $buffer{"SENstc"} = $1;
        $buffer{"index"} = GetIndex("short dialogue");
        
        say $OUT $json->encode(\%buffer);
        undef %buffer;
    }
    if ($line =~ /{qjz}(.+?){.*}/) {

        $buffer{"SENdef"} = $1;
        
        say $OUT $json->encode(\%buffer);
        undef %buffer;
    }

    # ```long dialogue```
    if ($line =~ /{g3t}(.+?){.*}/) {

        $buffer{"DLGDtitle"} = $1;
        $buffer{"DLGDtitle"} =~ s/ {2,}/ /g;
        $buffer{"DLGDtitle"} =~ s/([\x80-\xff]) ([\x80-\xff])/$1$2/g;
        
        say $OUT $json->encode(\%buffer);
        undef %buffer;
    }
    if ($line =~ /{dy}(.+?){.*}/) {
        my $data = $1;
        $buffer{"DLGDstc"} = $data;
        $buffer{"DLGDstc"} =~ s/: /:/;
        if ($data !~ /^\W/) {
            $buffer{"index"} = GetIndex("long dialogue");
        }
        
        say $OUT $json->encode(\%buffer);
        undef %buffer;
    }
    if ($line =~ /{y}(.+?){.*}/) {

        $buffer{"DLGDdef"} = $1;
        $buffer{"DLGDdef"} =~ s/: /:/;
        
        say $OUT $json->encode(\%buffer);
        undef %buffer;
    }
    if ($line =~ /{zhushi}(.+?){.*}/) {

        $buffer{"DLGNphrase"} = $1;
        $buffer{"DLGNphrase"} =~ s/\d+\. //g;
        
        say $OUT $json->encode(\%buffer);
        undef %buffer;
    }
    if ($line =~ /{def}(.+?){.*}/) {

        $buffer{"DLGNdef"} = $1;
        
        say $OUT $json->encode(\%buffer);
        undef %buffer;
    }
}

close $IN;
close $OUT;

sub GetIndex {

    my $type = shift;
    my $index = "";

    our $chapterNum;
    our $unitNum;
    our $levelNum;
    our $subNum;
    
    if ($type eq "chapter") {

        $chapterNum++;
        $unitNum = 0;
        $levelNum = 0;
        $subNum = 0;
        
        $index = $chapterNum * 10000;
    }
    elsif ($type eq "unit") {

        $unitNum++;
        $levelNum = 0;
        $subNum = 0;
        
        $index = $chapterNum * 10000 + $unitNum * 100;
    }
    elsif ($type eq "level") {

        $levelNum++;
        $subNum = 0;
        
        $index = $chapterNum * 10000 + $unitNum * 100 + $levelNum;

    }
    else {

        $subNum++;
        my $partOne = $chapterNum * 10000 + $unitNum * 100 + $levelNum;
        my $partTwo = sprintf("%02s",$subNum);

        $index = $partOne."_".$partTwo;
    }
    
    return $index;
};
