use strict;
use warnings;
use Data::Dumper;
use feature qw(say);
require FormatItem;

package XmlItem;

sub SelectDHBodyData {
    my ($data) = @_;

    my %obj = ();
    # *** body layer a ***
    if ($data =~ s/<word(.+?)<\/word>//) {
        my $tmpWord = $1;
        # ```tmpKey & word```
        if ($tmpWord =~ s/ search="(.+?)">(.*)//) {
            $obj{"tmpKey"} = $1;
            $obj{"word"} = $2;
        }
        if ($tmpWord =~ s/ homo="(\d+)"//) {
            $obj{"word"} .= "<up>".$1."</up>";
        }
        if ($tmpWord =~ / inflection="\*"/) {
            $obj{"word"} .= " *";
        }
        $obj{"word"} = FormatItem::DHde($obj{"word"});
    }
    # *** category layer b ***
    while ($data =~ s/<category.*?>(.+?)<\/category>//) {
        my $tmpCtg = $1;
        $tmpCtg =~ s/<self>/△/g;
        $tmpCtg =~ s/<\/self>/▽/g;
        my %ctg = ();
        my %sublayer = ();
        
        # ``` object have no sense```
        if ($tmpCtg !~ /<sense/) {
            $tmpCtg =~ s/<.+?>//g;
            ${$obj{"category"}[0]}{"sense"}{"def"} = $tmpCtg;
            return \%obj;
        }

        my $prevTag = "";
        while ($tmpCtg !~ /^<sense/) {
            $tmpCtg =~ s/<(.+?)>(.+?)<\/(.+?)>//;
            my $tagStart = $1;
            my $tagData = $2;
            my $tagEnd = $3;
            $tagStart =~ s/ id="\d"//;
            
            # ```pos & gram```
            if ($tagStart eq "gram") {
                $sublayer{"gram"} .= $tagData;
            }
            if (%sublayer) {
                push @{$ctg{"sublayer"}},\%sublayer;
                %sublayer = ();
            }
            $prevTag = $tagStart;
        }
        
            # # ```pos & gram```
            # # 待仔细处理，标签里的内容
            # while ($tmpCtg =~ s/<gram>(.+?)<\/gram>//) {
            #     if (%sublayer) {
            #         push @{$ctg{"sublayer"}},\%sublayer;
            #         %sublayer = ();
            #     }
            #     $sublayer{"gram"} .= $1;
            #     # last if $tmpCtg !~ /^<gram>/;
            # }
            # # ```variant```
            # while ($tmpCtg =~ s/<variant>(.+?)<\/variant>//) {
            #     $sublayer{"variant"} .= "; ".FormatItem::DHde($1);
            #     $sublayer{"variant"} =~ s/^; //;
            #     last if $tmpCtg !~ /^<variant>/;
            # }
            # # ```phrase```
            # while ($tmpCtg =~ s/<phrase>(.+?)<\/phrase>//) {
            # #     $ctg{"variant"} .= "; ".FormatItem::DHde($1);
            # #     $ctg{"variant"} =~ s/^; //;
            # #     last if $tmpCtg !~ /^<variant>/;
            # }

            # if ($tmpCtg !~ /<sense/) {
            #     say $tmpCtg;exit;
            # }
            


        # *** sence layer c ***
        # while ($tmpCtg =~ s/<sense.*?>(.+?)<\/sense>//) {
        #     my %sen = ();
        #     $sen{"test"} = $1;
            
        #     # *** idiom ***
            
        #     push @{$ctg{"sense"}},\%sen;
        # }
        push @{$obj{"category"}},\%ctg;
    }
    # say $data;exit;
    
    return \%obj;
}

1;
