use strict;
use warnings;
use Data::Dumper;
use Digest::MD5  qw(md5 md5_hex);
use Encode;
use JSON;
use feature qw (say);

$| = 1;
my $json = new JSON;

my $input_file = "./tmp_data/hdlg_swyynqjh_importdata.txt";

# --------- get file data---------
my @allData;
open my $IN ,"<", $input_file or die $!;
while (<$IN>) {

	unless ($_ =~ /"tips"/) {

		push @allData,$_;
	}
}
close $IN;

# --------- process data ---------
my @itemData = ProcessData (@allData);

# --------- finally data ---------
# ```uwid info```
my $index = 0;
my $pindex = 0;
my $uwidindex = 0;
my $bodynum = 0;
my $uwid_corp = 12;	  #华东理工
my $uwid_subDict = 12;  #sw英语拿起就会 dtype
my $uwid_len = 0;		# 0x00  16位
my $uwid_base = ($uwid_corp << 26) | $uwid_len << 24 | ($uwid_subDict << 16);

my $uwid = $uwid_base | $uwidindex;

# ```structure data```
my %strData;
my %desData;
my @sortKey = ("kc");
# ```details data```
my @detailsData;

ProcessFinallyData (\@itemData);

# --------- print details data ---------
{
	my $output_dataFile = "./final_data/hdlg_swyynqjh_details_full.txt";
	open my $DATAOUT ,">", $output_dataFile or die $!;

	foreach my $num (0 .. $#detailsData) {

		my $item = $detailsData[$num];
		if ($num == 0) {

			delete ${$item}{"prev"};
		}
		elsif ($num == $#detailsData) {

			delete ${$item}{"next"};
		}
		my $key = ${$item}{"key"};
		my $uwid = ${$item}{"uwid"};
		say $DATAOUT $key."\t".$uwid."\t".$json->encode($item);
	}
	close $DATAOUT;
}
# --------- print structure data ---------
{
	my $output_strFile = "./final_data/hdlg_swyynqjh.studystructure.txt";
	my $output_desFile = "./final_data/hdlg_swyynqjh.studydescription.txt";
	open my $STROUT ,">", $output_strFile or die $!;
	open my $DESOUT ,">", $output_desFile or die $!;

	foreach my $key (@sortKey) {
		
		my $key = $key;
		say $STROUT $key."\t".$json->encode($strData{$key});
		say $DESOUT $key."\t".$json->encode($desData{$key});
	}

	close $STROUT;
	close $DESOUT;
}

sub ProcessData {

	my (@allData) = @_;
	my @itemData;
	my @buffer;

	foreach my $num (0 .. $#allData) {

		my $line = $allData[$num];
		my %obj = %{$json->decode($line)};

		# ```level_one_word```
		if (exists $obj{"word"}) {

			my %wordItem;
			$wordItem{"body"} = ProcessTypeOneBodyData ($obj{"word"},$obj{"WDdef"},$obj{"index"});
			$wordItem{"type"} = 1;

			push @itemData,\%wordItem;
		}
		# ```level_one_sentence```
		elsif (exists $obj{"STCstc"}) {

			my %sentenceItem;
			$sentenceItem{"body"} = ProcessTypeOneBodyData ($obj{"STCstc"},$obj{"STCdef"},$obj{"index"});
			$sentenceItem{"type"} = 2;
			
			push @itemData,\%sentenceItem;
		}
		# ```level_two```
		elsif ($line =~ /"SEN/ and
			   $line !~ /"SENscene"/) {

			push @buffer,\%obj;

			if ($allData[$num] =~ /"SENdef"/ and
				$allData[$num+1] !~ /"SENdef"/) {

				my %shortDialogueItem;
				$shortDialogueItem{"body"} = ProcessTypeTwoBodyData (\@buffer);
				$shortDialogueItem{"type"} = 3;

				push @itemData,\%shortDialogueItem;
				undef @buffer;
			}
		}
		# ```level_three_longDialogue```
		elsif ($line =~ /"DLGD/ and
			   $line !~ /"DLGDtitle"/) {

			push @buffer,\%obj;

			if ($allData[$num+1] !~ /"DLGD/) {

				my @bodyData = ProcessTypeThreeLongDialogueBodyData (\@buffer);

				foreach my $tmpData (@bodyData) {

					my %longDialogueItem;
					$longDialogueItem{"body"} = $tmpData;
					$longDialogueItem{"type"} = 4;
					push @itemData,\%longDialogueItem;
				}

				undef @buffer;
			}
		}
		# ```level_three_annotation```
		elsif ($line =~ /"DLGN/) {

			push @buffer,\%obj;

			if($allData[$num] =~ /"DLGN/ and 
			   (($num == $#allData) or ($allData[$num+1] !~ /"DLGNdef"/))) {

				my %AnnotationItem;
				$AnnotationItem{"body"} = ProcessTypeThreeAnnotationBodyData (\@buffer);
				$AnnotationItem{"type"} = 5;
				push @itemData,\%AnnotationItem;
				undef @buffer;
			}
		}
		#```other data```
		else {

			push @itemData,\%obj;
		}
	}

	return @itemData;
}

sub ProcessFinallyData {

	my $itemData = shift;

	${$strData{"kc"}}{"id"} = "kc";
	${$desData{"kc"}}{"id"} = "kc";
	${$desData{"kc"}}{"childrennum"} = 0;
	${$desData{"kc"}}{"progressnum"} = 0;

	my @kcNum = (0,0,0,0,0);
	my @kcKey = ("","","","","");
	my $parentId = "";

	my $levelOneWordFlag = 1;
	my $levelOneSentenceFlag = 1;
	my $levelThreeannotationFlag = 1;

	my $dataCount = 0;

	foreach my $item (@{$itemData}) {

		# ```kca```
		if (exists ${$item}{"chapter"}) {
			
			$parentId = "kc";
			@kcNum = (++$kcNum[0],0,0,0,0);
			$kcKey[0] = $parentId."_kca".sprintf("%02d",$kcNum[0]);
			push @sortKey,$kcKey[0];

			ToStructureStr (\%strData,$kcKey[0],$parentId);
			# ToStructureDes (\%desData,$kcKey[0],${$item}{"chapter"},0,${$item}{"chapter_name"},"");
			ToStructureDes (\%desData,$kcKey[0],${$item}{"chapter"},${$item}{"chapter_name"},"");
			ComplentParentData (\%strData,\%desData,$parentId,$kcKey[0],1,0);

			$parentId = $kcKey[0];
		}
		# ```kcb```
		elsif (exists ${$item}{"unit"}) {
			
			$parentId = $kcKey[0];
			@kcNum = ($kcNum[0],++$kcNum[1],0,0,0);
			$kcKey[1] = $kcKey[0]."_kcb".sprintf("%02d",$kcNum[1]);
			push @sortKey,$kcKey[1];

			ToStructureStr (\%strData,$kcKey[1],$parentId);
			# ToStructureDes (\%desData,$kcKey[1],${$item}{"unit"},0,${$item}{"unit_name"},${$item}{"unit_summary"});
			ToStructureDes (\%desData,$kcKey[1],${$item}{"unit"},${$item}{"unit_name"},${$item}{"unit_summary"});
			ComplentParentData (\%strData,\%desData,$parentId,$kcKey[1],1,0);

			$parentId = $kcKey[1];
		}
		# ```kcc```
		elsif (exists ${$item}{"level"}) {
			
			$parentId = $kcKey[1];
			@kcNum = ($kcNum[0],$kcNum[1],++$kcNum[2],0,0);
			$kcKey[2] = $kcKey[1]."_kcc".sprintf("%02d",$kcNum[2]);
			push @sortKey,$kcKey[2];

			ToStructureStr (\%strData,$kcKey[2],$parentId);
			# ToStructureDes (\%desData,$kcKey[2],${$item}{"level"},0,${$item}{"level_name"},"");
			ToStructureDes (\%desData,$kcKey[2],${$item}{"level"},${$item}{"level_name"},"");
			ComplentParentData (\%strData,\%desData,$parentId,$kcKey[2],1,0);

			$levelOneWordFlag = 1;
			$levelOneSentenceFlag = 1;
			$levelThreeannotationFlag = 1;
			$dataCount = 1;	

			$parentId = $kcKey[2];
		}
		elsif (exists ${$item}{"type"} and
			${$item}{"type"} == 1) {

			# ```level one word kcd```
			if ($levelOneWordFlag) {

				$parentId = $kcKey[2];
				@kcNum = ($kcNum[0],$kcNum[1],$kcNum[2],++$kcNum[3],0);
				$kcKey[3] = $kcKey[2]."_kcd".sprintf("%02d",$kcNum[3]);
				push @sortKey,$kcKey[3];

				ToStructureStr (\%strData,$kcKey[3],$parentId);
				# ToStructureDes (\%desData,$kcKey[3],"WORDS",0,"","");
				ToStructureDes (\%desData,$kcKey[3],"WORDS","","");
				ComplentParentData (\%strData,\%desData,$parentId,$kcKey[3],1,0);

				$levelOneWordFlag = 0;

				$parentId = $kcKey[3];
			}
			# ```level one word data```
			my $detailsKey = $parentId."_".$dataCount++;
			ToDetailsFull (\@detailsData,$detailsKey,$item);
			ComplentParentData (\%strData,\%desData,$parentId,$uwid,0,1);
		}
		elsif (exists ${$item}{"STCinfo"}) {

			# ```level one sentence kcd```
			if ($levelOneSentenceFlag) {

				$parentId = $kcKey[2];
				@kcNum = ($kcNum[0],$kcNum[1],$kcNum[2],++$kcNum[3],0);
				$kcKey[3] = $kcKey[2]."_kcd".sprintf("%02d",$kcNum[3]);
				push @sortKey,$kcKey[3];

				ToStructureStr (\%strData,$kcKey[3],$parentId);
				# ToStructureDes (\%desData,$kcKey[3],"SENTENCES",0,"","");
				ToStructureDes (\%desData,$kcKey[3],"SENTENCES","","");
				ComplentParentData (\%strData,\%desData,$parentId,$kcKey[3],1,0);

				$levelOneSentenceFlag = 0;

				$parentId = $kcKey[3];
			}

			# ``level one sentence kce```
			$parentId = $kcKey[3];
			++$kcNum[4];
			$kcKey[4] = $kcKey[3]."_kce".sprintf("%02d",$kcNum[4]);
			push @sortKey,$kcKey[4];

			ToStructureStr (\%strData,$kcKey[4],$parentId);
			# ToStructureDes (\%desData,$kcKey[4],${$item}{"STCinfo"},0,"","");
			ToStructureDes (\%desData,$kcKey[4],${$item}{"STCinfo"},"","");
			ComplentParentData (\%strData,\%desData,$parentId,$kcKey[4],1,0);

			$parentId = $kcKey[4];
		}
		# ```level one sentence data```
		elsif (exists ${$item}{"type"} and
			${$item}{"type"} == 2) {

			my $detailsKey = $parentId."_".$dataCount++;
			ToDetailsFull (\@detailsData,$detailsKey,$item);
			ComplentParentData (\%strData,\%desData,$parentId,$uwid,0,1);
		}
		# ```level two kcd```
		elsif (exists ${$item}{"SENscene"}) {

			$parentId = $kcKey[2];
			@kcNum = ($kcNum[0],$kcNum[1],$kcNum[2],++$kcNum[3],0);
			$kcKey[3] = $kcKey[2]."_kcd".sprintf("%02d",$kcNum[3]);
			push @sortKey,$kcKey[3];
			ToStructureStr (\%strData,$kcKey[3],$parentId);
			# ToStructureDes (\%desData,$kcKey[3],${$item}{"SENscene"},0,"","");
			ToStructureDes (\%desData,$kcKey[3],${$item}{"SENscene"},"","");
			ComplentParentData (\%strData,\%desData,$parentId,$kcKey[3],1,0);

			$parentId = $kcKey[3];
		}
		# ```level two data```
		elsif (exists ${$item}{"type"} and
			${$item}{"type"} == 3) {

			my $detailsKey = $parentId."_".$dataCount++;
			ToDetailsFull (\@detailsData,$detailsKey,$item);
			ComplentParentData (\%strData,\%desData,$parentId,$uwid,0,1);
		}
		# ```level three kcd dialogue```
		elsif (exists ${$item}{"DLGDtitle"}) {

			$parentId = $kcKey[2];
			@kcNum = ($kcNum[0],$kcNum[1],$kcNum[2],++$kcNum[3],0);
			$kcKey[3] = $kcKey[2]."_kcd".sprintf("%02d",$kcNum[3]);
			push @sortKey,$kcKey[3];

			ToStructureStr (\%strData,$kcKey[3],$parentId);
			# ToStructureDes (\%desData,$kcKey[3],${$item}{"DLGDtitle"},0,"","");
			ToStructureDes (\%desData,$kcKey[3],${$item}{"DLGDtitle"},"","");
			ComplentParentData (\%strData,\%desData,$parentId,$kcKey[3],1,0);

			$parentId = $kcKey[3];
		}
		# ```level three dialogue data```
		elsif (exists ${$item}{"type"} and
			${$item}{"type"} == 4) {

			my $detailsKey = $parentId."_".$dataCount++;
			ToDetailsFull (\@detailsData,$detailsKey,$item);
			if (${${$item}{"body"}}{"type"} eq "sen") {

				ComplentParentData (\%strData,\%desData,$parentId,$uwid,0,1);
			}
			else {

				ComplentParentData (\%strData,\%desData,$parentId,$uwid,0,0,"aside");
			}
		}
		# ```level three kcd annotation```
		elsif (exists ${$item}{"type"} and
			${$item}{"type"} == 5) {

			if ($levelThreeannotationFlag) {

				$parentId = $kcKey[2];
				@kcNum = ($kcNum[0],$kcNum[1],$kcNum[2],++$kcNum[3],0);
				$kcKey[3] = $kcKey[2]."_kcd".sprintf("%02d",$kcNum[3]);
				push @sortKey,$kcKey[3];

				ToStructureStr (\%strData,$kcKey[3],$parentId);
				# ToStructureDes (\%desData,$kcKey[3],"注释",0,"","");
				ToStructureDes (\%desData,$kcKey[3],"注释","","");
				ComplentParentData (\%strData,\%desData,$parentId,$kcKey[3],1,0);

				$levelThreeannotationFlag = 0;

				$parentId = $kcKey[3];
			}
			
			# ```level three annotation data```
			my $detailsKey = $parentId."_".$dataCount++;
			ToDetailsFull (\@detailsData,$detailsKey,$item);
			ComplentParentData (\%strData,\%desData,$parentId,$uwid,0,0);
		}
	}
}

sub ProcessTypeOneBodyData {

	my ($cont,$tran,$audio) = @_;

	my %typeOneBodyData;

	$typeOneBodyData{"cont"} = $cont;
	$typeOneBodyData{"tran"} = $tran;
	$typeOneBodyData{"audio"} = $audio.".mp3";

	return \%typeOneBodyData;
}

sub ProcessTypeTwoBodyData {

	my ($buffer) = @_;

	my %typeTwoBodyData;

	foreach my $line (@{$buffer}) {

		if (exists ${$line}{"SENinfo"}) {

			$typeTwoBodyData{"title"} = ${$line}{"SENinfo"};
		}
		elsif (exists ${$line}{"SENstc"}) {

			${$line}{"SENstc"} =~ /^([A-Z])(:|：)(.*)/;
			my $role = $1;
			my $cont = $3;
			push @{$typeTwoBodyData{"cont"}},$cont;
			push @{$typeTwoBodyData{"role"}},$role;
			push @{$typeTwoBodyData{"audio"}},${$line}{"index"}.".mp3";
		}
		elsif (exists ${$line}{"SENdef"}) {

			${$line}{"SENdef"} =~ /^([A-Z])(:|：)(.*)/;
			my $tran = $3;
			push @{$typeTwoBodyData{"tran"}},$tran;
		}
	}

	return \%typeTwoBodyData;
}

sub ProcessTypeThreeLongDialogueBodyData {

	my ($buffer) = @_;

	my @typeThreeLongDialogueBodyData;
	my %dialogueItem;
	my @tmpDataArray;
	my $flag = 0;

	foreach my $line (@{$buffer}) {

		if (exists ${$line}{"DLGDstc"}) {

			my %tmpSingleData;
			if (${$line}{"DLGDstc"} =~ /^([A-Z]):(.*)/) {

				$tmpSingleData{"cont"} = $2;
				$tmpSingleData{"role"} = $1;
				$tmpSingleData{"type"} = "sen";

				if (exists ${$line}{"index"}) {

					$tmpSingleData{"audio"} = ${$line}{"index"}.".mp3";
				}
			}
			else {
				$tmpSingleData{"type"} = "aside";
				$tmpSingleData{"cont"} = ${$line}{"DLGDstc"};
			}
			push @tmpDataArray,\%tmpSingleData;
		}
		elsif (exists ${$line}{"DLGDdef"}) {

			my $tmpSingleData = shift @tmpDataArray;
			if (${$line}{"DLGDdef"} =~ /^[A-Z]:(.*)/) {

				${$tmpSingleData}{"tran"} = $1;
			}
			else {

				${$tmpSingleData}{"tran"} = ${$line}{"DLGDdef"};
			}
			push @typeThreeLongDialogueBodyData,$tmpSingleData;
		}
	}
	return @typeThreeLongDialogueBodyData;
}

sub ProcessTypeThreeAnnotationBodyData {

	my ($buffer) = @_;

	my %typeThreeAnnotationBodyData;

	foreach my $line (@{$buffer}) {
			
		if (exists ${$line}{"DLGNphrase"}) {

			$typeThreeAnnotationBodyData{"phrase"} = ${$line}{"DLGNphrase"};
		}
		elsif (exists ${$line}{"DLGNdef"}) {

			$typeThreeAnnotationBodyData{"exp"} .= ${$line}{"DLGNdef"};
		}
	}

	return \%typeThreeAnnotationBodyData;
}

sub ToStructureStr {

	my ($strData,$key,$parentId) = @_;
	my %strHash;

	$strHash{"key"} = $key;
	$strHash{"parent_id"} = $parentId;

	${$strData}{$key} = \%strHash;
}

sub ToStructureDes {
	
	my ($desData,$key,$title,$word,$info,$flag) = @_;
	my %desHash;

	$desHash{"key"} = $key;
	$desHash{"title"} = $title;
	$desHash{"childrennum"} = 0;
	$desHash{"info"} = $info if $info ne "";
	$desHash{"word"} = $word if $word ne "";

	${$desData}{$key} = \%desHash;
}

sub ComplentParentData {
	
	my ($strData,$desData,$parentId,$key,$flag,$flagPN,$type) = @_;
	$type //= "default";

	push @{${${$strData}{$parentId}}{"sub_id"}},$key if $flag;
	push @{${${$strData}{$parentId}}{"sub_uwid"}},int $key if !$flag;
	${${$desData}{$parentId}}{"childrennum"}++ if $type ne "aside";
	CountProgressNum ($strData,$desData,$parentId,$key) if $flagPN;
}

sub ToDetailsFull {

	my ($detailsData,$key,$detailsItem) = @_;

	${$detailsItem}{"uwid"} = ++$uwid;
	${$detailsItem}{"prev"} = $uwid - 1;
	${$detailsItem}{"next"} = $uwid + 1;
	${$detailsItem}{"key"} = $key;

	push @{$detailsData},$detailsItem;
}

sub CountProgressNum {

	my ($strData,$desData,$key) = @_;

	${${$desData}{$key}}{"progressnum"}++;
	if (exists ${${$strData}{$key}}{"parent_id"}) {
		
		CountProgressNum ($strData,$desData,${${$strData}{$key}}{"parent_id"});
	}
}
