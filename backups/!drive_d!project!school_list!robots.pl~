use warnings;
use strict;
use Data::Dumper;
use feature qw(say);
use LWP;
use HTTP::Request;
use JSON;
$| = 1;
my $jsonCoder = new JSON;
my $browser = LWP::UserAgent->new;

my $tmp = "./original_data/ps_schools_16Sep_original.txt";
my $provinceList = "./provinceList.txt";
my $provinceURL = 'http://www.17zuoye.com/map/nodes.api';
my $response = $browser->get($provinceURL);

my $provinces = $jsonCoder->decode($response->content);

open TMP,"> $tmp", or die $!;
robots_and_print($provinces);


# open PL ,"> $provinceList", or die $!;

# foreach my $province (@provinces) {

# 	my %province = %{$province};
# 	say PL $jsonCoder->encode(\%province);

# 	##########################################
# 	sleep(1);
# 	my $cityURL = 'http://www.17zuoye.com/map/nodes.api?id='.$province{"id"};
	
# }

# close PL;

# # my $citiesList = "./citiesList.txt";

# # my $response = $browser->get($citieURL);

# # my $provinces = $jsonCoder->decode($response->content);
# # my @cities = @{$provinces};

# my $tmpURLX = 'http://www.17zuoye.com/school/school-410783.api';
# my $responseY = $browser->get($tmpURLX);

# say TMP $responseY->content;

close TMP;

sub robots_and_print {
	sleep(1);
	my ($array) = @_;

	foreach my $tmpHashX (@{$array}) {
		say TMP $jsonCoder->encode($tmpHashX);

		my $tmpURLX = 'http://www.17zuoye.com/map/nodes.api?id='.${$tmpHashX}{"id"};
		my $responseY = $browser->get($tmpURLX);
		while ($responseY->is_error) {
			$responseY = $browser->get($tmpURLX);
		}
		if ($responseY->content ne "[]") {
			my $tmp = $jsonCoder->decode($responseY->content);

			sleep(1);
			robots_and_print($tmp);
		} else {
			my $tmpURLZ = 'http://ucenter.17zuoye.com/school/areaschool.api?area='.${$tmpHashX}{"id"}.'&level=PRIMARY_SCHOOL';
			my $responseZ = $browser->get($tmpURLZ);
			while ($responseZ->is_error) {
				$responseZ = $browser->get($tmpURLZ);
			}
			
			my $schools = $jsonCoder->decode($responseZ->content);
			my @schoolsArray;

			if (ref $schools eq "HASH") {
				my %schoolsHash = %{$schools};
				@schoolsArray = @{$schoolsHash{"rows"}};
			}
			if (ref $schools eq "ARRAY") {
				@schoolsArray = @{$schools};
			}
			foreach my $school (@schoolsArray) {
				# delete ${$school}{"level"};
				# delete ${$school}{"updateTime"};
				# delete ${$school}{"createTime"};
				# delete ${$school}{"payOpen"};
				# delete ${$school}{"logo"};
				# delete ${$school}{"disabled"};
				# delete ${$school}{"old"};
				# delete ${$school}{"ambassadorDate"};
				# delete ${$school}{"ename"};
				# delete ${$school}{"ambassador"};
				# delete ${$school}{"ambassadorDate"};
				# delete ${$school}{"authenticationState"};
				say TMP $jsonCoder->encode($school);
			}
		}
	}
}