use warnings;
use strict;
use Encode;
use Data::Dumper;
use JSON;
use feature qw(say);

my $json = new JSON;

my $in_file = "./tmp_data/hdlg_dzryqlx_import_data.txt";
my $out_file = "./tmp_data/hdlg_dzryqlx_tmp_details.txt";

open my $IN ,"<", $in_file or die $!;
open my $OUT ,">", $out_file or die $!;

my %item = ();
my @wordData = ();
my @senseData = ();
my @senseCNData = ();
my $chapterNum = 0;
my $unitNum = 0;
my $subNum = 0;
while (<$IN>) {
	chomp;
	my $line = $_;
	
	# ```chapter```
	if ($line =~ /<cimg>(.+?)<\/cimg>/) {
        $item{"img"} = $1;
        next;
    }
    if ($line =~ /<cbiaotiriwen>(.+?)<\/cbiaotiriwen>/) {
        $item{"title"} = $1;
        next;
    }
    if ($line =~ /<cbiaotiz>(.+?)<\/cbiaotiz>/) {
        InitNum(1);
        $item{"word"} = $1;
        $item{"type"} = "l_a";
        say $OUT $json->encode(\%item);
        %item = ();
        next;
    }

    # ```unit```
    if ($line =~ /\d <part>(.+?)(（.+?）)<\/part>/) {
        InitNum(2);
        $item{"title"} = $1;
        $item{"word"} = $2;
        $item{"type"} = "l_b";
        say $OUT $json->encode(\%item);
        %item = ();
        next;
    }

    # ```word```
    if ($line =~ /<word>(.+?)<\/word>/) {
        if (exists $item{"word"} and !exists $item{"img"}) {
            my %tmpItem = %item;
            push @wordData,\%tmpItem;
            %item = ();
        }
        $item{"word"} = $1;
        $item{"type"} = "w_c";
        next;
    }
    if ($line =~ /<def>(.+?)<\/def>/) {
        $item{"def"} = $1;
        next;
    }
    if ($line =~ /<wimg>(.+?)<\/wimg>/) {
        InitNum(3);
        my $img = $1;
        $item{"img"} = $img;
        $item{"audio"} = GetPronNum($chapterNum,$unitNum,$subNum).".mp3";
        if (@wordData) {
            foreach my $tmpItem (@wordData) {
                ${$tmpItem}{"img"} = $img;
                say $OUT $json->encode($tmpItem);
            }
            @wordData = ();
        }
        say $OUT $json->encode(\%item);
        %item = ();
        next;
    }

    # ```phrase```
    if ($line =~ /<gjc>(.+?)<\/gjc>/) {
        $item{"phrase"} = $1;
        next;
    }
    if ($line =~ /<gjcz>(.+?)<\/gjcz>/) {
        InitNum(3);
        $item{"def"} = $1;
        $item{"type"} = "w_c";
        $item{"audio"} = GetPronNum($chapterNum,$unitNum,$subNum).".mp3";
        say $OUT $json->encode(\%item);
        %item = ();
        next;
    }

    if ($line eq "============================================") {
        if (@senseData) {
            PrintSense(\@senseData,\@senseCNData);
        }
    }
    
    # ```sense```
    if ($line =~ /<hbiaoti>(.+?)<\/hbiaoti>/) {
        if (@senseData) {
            PrintSense(\@senseData,\@senseCNData);
        }
        $item{"title"} = $1;
        $item{"type"} = "l_c";
        say $OUT $json->encode(\%item);
        %item = ();
        next;
    }
    if ($line =~ /<rmriwen>(.+?)<\/rmriwen>/) {
        push @senseData,trim($1);
        next;
    }
    if ($line =~ /<hriyu>(.+?)<\/hriyu>/) {
        push @senseData,trim($1);
        next;
    }
    if ($line =~ /<hz>(.+?)<\/hz>/) {
        push @senseCNData,trim($1);
        next;
    }
    if ($line =~ /<rmz>(.+?)<\/rmz>/) {
        push @senseCNData,trim($1);
        next;
    }

    # ```sentence```
    if ($line =~ /\d+ <bbiaoti>(.+?)<\/bbiaoti>/) {
        $item{"title"} = $1;
        $item{"type"} = "l_c";
        say $OUT $json->encode(\%item);
        %item = ();
        next;
    }
    if ($line =~ /^<hdbiaoti>(.+?)<\/hdbiaoti>/) {
        $item{"title"} = $1;
        $item{"type"} = "l_d";
        say $OUT $json->encode(\%item);
        %item = ();
        next;
    }
    if ($line =~ /^<briwen>(.+?)<\/briwen>$/) {
        $item{"cont"} = trim($1);
        $item{"cont"} =~ s/<briwen>//g;
        next;
    }
    if ($line =~ /^<bzhongwen>(.+?)<\/bzhongwen>$/) {
        InitNum(3);
        $item{"tran"} = trim($1);
        $item{"type"} = "w_e";
        $item{"audio"} = GetPronNum($chapterNum,$unitNum,$subNum).".mp3";
        say $OUT $json->encode(\%item);
        %item = ();
        next;
    }

    # ```other```
    if ($line =~ /<buchongb>(.+?)<\/buchongb>/) {
        $item{"title"} = trim($1);
        next;
    }
    if ($line =~ /<buchongby>(.+?)<\/buchongby>/) {
        InitNum(2);
        $item{"word"} = $1;
        $item{"type"} = "l_c";
        say $OUT $json->encode(\%item);
        %item = ();
        next;
    }
    if ($line =~ /<chujinb>(.+?)<\/chujinb>/ or
        $line =~ /<chujinnr>(.+?)<\/chujinnr>/ or
        $line =~ /<chujinimg>(.+?)<\/chujinimg>/ or
        $line =~ /<chujinb>(.+?)<\/chujinb>/ or
        $line =~ /<jipiaoimg>(.+?)<\/jipiaoimg>/ or
        $line =~ /<dengjiz>(.+?)<\/dengjiz>/ or
        $line =~ /<hangbanimg>(.+?)<\/hangbanimg>/ or
        $line =~ /<hangbanz>(.+?)<\/hangbanz>/ or
        $line =~ /<qianzhenimg>(.+?)<\/qianzhenimg>/ or
        $line =~ /<qianzhenz>(.+?)<\/qianzhenz>/ or
        $line =~ /<furiz>(.+?)<\/furiz>/ or
        $line =~ /<gsz>(.+?)<\/gsz>/ or
        $line =~ /<gsimg>(.+?)<\/gsimg>/) {
        push @{$item{"note"}},trim($1)."<br>";
        next;
    }
    if ($line eq "========================================") {
        $item{"type"} = "w_d";
        say $OUT $json->encode(\%item);
        %item = ();
        next;
    }
}

close $IN;
close $OUT;

sub PrintSense {
    my ($data,$dataCN) = @_;
    my %senseItem = ();

    foreach my $num (0 .. $#{$data}) {
        if ($num % 2) {
            InitNum(3);
            $senseItem{"cont"} = ${$data}[$num];
            $senseItem{"tran"} = ${$dataCN}[$num];
            $senseItem{"type"} = "w_d";
            $senseItem{"audio"} = GetPronNum($chapterNum,$unitNum,$subNum).".mp3";
            say $OUT $json->encode(\%senseItem);
            %senseItem = ();
        }else {
            $senseItem{"role"} = ${$data}[$num];
            $senseItem{"role_cn"} = ${$dataCN}[$num];
        }
    }
    @{$data} = ();
    @{$dataCN} = ();
};

sub InitNum {
    my $flag = shift;
    $flag //= 0;

    if ($flag == 1) {
        $chapterNum++;
        $unitNum = 0;
        $subNum = 0;
    }elsif ($flag == 2) {
        $unitNum++;
        $subNum = 0;
    }elsif ($flag == 3) {
        $subNum++;
    }
};

sub GetPronNum {
    my ($chap,$unit,$word) = @_;
    $chap //= 0;
    $unit //= 0;
    $word //= 0;
    my $pronNum = "";

    if ($chap < 1) {
        return $pronNum;
    }
    else {
        if ($unit != 0 and $word != 0) {
            $pronNum = $chap*10000 + $unit*100 + $word;
        }
        elsif ($unit != 0) {
            $pronNum = $chap*10000 + $unit*100;
        }
        else {
            $pronNum = $chap*10000;
        }

        return $pronNum;
    }
};

sub trim {
    my $string = shift;
    $string =~ s/^\s+|\s+$//g;
    $string =~ s/ {2,}/ /g;
    return $string;
};
