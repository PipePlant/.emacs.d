use strict;
use warnings;
use Encode;
use Data::Dumper;
use File::Basename;
use JSON;
use feature qw (say);

my $json = new JSON;

my $in = "./final_data/hdlg_dzyyqlx.studystructure.txt";

open IN ,"< $in", or die $!;

mkdir "./pack_files" unless -e("./pack_files");

# my $clean = unlink glob "./pack_flies/*";

my $inputFileKey = "";
my %uwidData;
while (<IN>) {

	my $line = $_;
	$line =~ /(.*)\t(.*)/;
	my $key = $1;
	my %obj = %{$json->decode($2)};

	if ($key =~ /kca\d+$/) {

		$inputFileKey = $key;
	}
	elsif (exists $obj{"sub_uwid"} and
		  $key =~ /$inputFileKey/) {

		push @{$uwidData{$inputFileKey}},@{$obj{"sub_uwid"}};
	}
}

my @keys = keys %uwidData;

foreach my $outputFileKey (@keys) {

	my $outputFile = "./pack_files/$outputFileKey.txt";

	open OUT ,"> $outputFile", or die $!;

	map {say OUT $_;} @{$uwidData{$outputFileKey}};

	close OUT;
}