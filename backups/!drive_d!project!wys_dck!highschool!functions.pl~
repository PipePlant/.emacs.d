use warnings;
use strict;
use JSON;
use Data::Dumper;
use Encode;
use File::Find;
use Cwd;
use feature qw(say);

1;
#查找源文件列表
sub get_file_list {
    my $dir = $File::Find::name;
    
    unless (-d $dir) {
        if ($dir =~ /\.xml$/
            and $dir !~ / \- /) { 
            print FL "$dir\n";
        }
    }
}

#处理高中数据
sub get_data_sh {

    my ($file,$fileName,$proWord) = @_;

    open IN ,"< $file", or die $!;
    my @fileData = <IN>;
    close IN;

    my @processedData;
    my $tmpLine = "";
    my $dataFlag = 0;
    my $aaa = 0;
    foreach my $line (@fileData) {

        $line =~ s/^\s+//g;
        $line =~ s/( +)$|(\t+)$//g;
        $line =~ s/640BC\?##151;546BC\?/640BC\?-546BC\?/;
        $line =~ s/640 BC\?##151;546 BC\?/640 BC\?-546 BC\?/;
        $line =~ s/(&|#)#163;/£/g;
        $line =~ s/##160;/,/g;
        $line =~ s/##38;/&/g;
        $line =~ s/##176;/°/g;
        $line =~ s/##183;//g;
        $line =~ s/##233;/é/g;
        $line =~ s/##8211;/–/g;
        $line =~ s/##8722;/−/g;
        $line =~ s/##151;/ /g;
        $line =~ s/<br\/>/<br>/g;
        $line =~ s/<!--img.+?-->//g;
        $line =~ s/ {2,}/ /g;

        if ($line =~ /^<p>/) {
            if ($line =~ /<\/p>$/) {

                push @processedData,$line;
            }
            else {

                $tmpLine .= $line;
                $tmpLine =~ s/\n//g;
                $dataFlag = 1;
            }
        }
        elsif ($line =~ /^<\/p>$/) {

            $tmpLine .= $line;
            push @processedData,$tmpLine;
            $tmpLine = "";
            $dataFlag = 0;
        }
        elsif ($dataFlag) {

            $tmpLine .= $line;
            $tmpLine =~ s/\n//g;
        }
        else {

            push @processedData,$line;
        }
    }
    
    my %body;
    my $type = 0;
    my @tmpArray;

    my $word = "";
    foreach my $line (@processedData) {
        # ===========_word_============
        if ($line =~ /<li id="entry">(.*)<\/li>/) {
            my $tmpValue = $1;

            $tmpValue =~ s/##233;/é/g;
            $tmpValue =~ s/##\d+;//g;
            $tmpValue =~ s/&#\d+;//g;
            $tmpValue =~ s/\// \/ /g;
            $tmpValue =~ s/ {2,}/ /g;
            $tmpValue =~ s/##183;/ /g;
            
            $word = $tmpValue;
            $body{"word"} = $tmpValue;
        }
        # ===========_pron_============
        ${$body{"pron"}}{"v"} = 4;
        ${$body{"pron"}}{"lang"} = "b";
        $fileName =~ s/(.*).xml/$1/;
        $fileName =~ s/-M\d+//g;
        $fileName =~ s/ |\n//g;
        ${$body{"pron"}}{"aw"} = lc ($fileName.".mp3");
        # ===========_def_============
        if ($line =~ /<p>(.+?)<\/p>/) {
            my $defData = $1;
            $defData =~ s/<i><\/i>//g;
            my $pos = "";
            my $eng = "";
            if ($defData =~ /(<i>.+?<\/i>) (.*)/) {
                $pos = $1;
                $eng = $2;
                $eng =~ s/<span class="ipa">.+?<\/span>//g;
                $eng =~ s/<span class="glossterms">(.+?)<\/span>/<glossterms>$1<\/glossterms>/g;
                $eng =~ s/^\s+//g;
                push @{$body{"paraphrase"}},{"pos" => $pos, "eng" => $eng};
            } else {
                $eng = $defData;
                $eng =~ s/<span class="ipa">.+?<\/span>//g;
                $eng =~ s/<span class="glossterms">(.+?)<\/span>/<glossterms>$1<\/glossterms>/g;
                $eng =~ s/^\s+//g;
                push @{$body{"paraphrase"}},{"eng" => $eng};
            }
        }
        # ===========_example_============
        if ($line =~ /<li>(.+?)<\/li>/) {
            my $example = example_getColor($1,$body{"word"},$proWord);
            $example =~ s/^\s+//g;
            push @{$body{"example"}},$example;
        }
        # ===========_symbol_============
        # if ($line =~ /<li class="ipa">\/(.*)\/<\/li>/) {
        #     my $tmpValue = $1;
        #     $body{"symbol"} = $tmpValue;
        # }
        # ===========_sense and def_============
        # ~~~
        # my $data = "";
        # if ($line =~ /^\t*(<p>)?(.+?)<\/p>/) {

        #     $data = $2;
        # }

        # my $tmpValue1 = "";
        # my $tmpValue2 = "";

        # if ($data =~ /<i>(.*?)<\/i>(.*)/) {

        #     $tmpValue1 = $1;
        #     $tmpValue2 = $2;
            
        #     $tmpValue1 =~ s/come straight to the point//g;
        # }
        # elsif ($data =~ /<i><\/i>(.*)/) {

        #     $tmpValue2 = $1;
        # }
        # else {

        #     $data =~ s/<.+?>//g;
        #     $tmpValue2 = $data;
        # }

        # $tmpValue2 =~ s/^\s+//g;
        # $tmpValue2 =~ s/<.*?>//g;
        # $tmpValue2 =~ s/\t//g;
        # $tmpValue2 =~ s/\n//g;
        # $tmpValue2 =~ s/\/.+?\///g;
        # $tmpValue2 =~ s/(\^)|(\+)//g;
        # $tmpValue2 =~ s/^\s+|\s+$//g;
        # $tmpValue2 =~ s/##233;/é/g;
        # $tmpValue2 =~ s/##38;/&/g;

        # if ($tmpValue2 ne "") {
        #     my %tmpHash;
        #     if ($tmpValue1 ne "") {
        #         $tmpValue1 =~ s/,/ /;
        #         $tmpHash{"pos"} = $tmpValue1;
        #     }
        #     $tmpValue2 =~ s/(\w)( \(\d+\))/$1;$2/g;
        #     $tmpValue2 =~ s/;$//g;
        #     $tmpHash{"eng"} = $tmpValue2;
        #     push(@{$body{"paraphrase"}},\%tmpHash);
        # }
        # ~~~

        # ===========_example and paraphrase and info_============
        # ~~~
        # $type = 1
        #     if $line =~ /<ul id="entry_examples">/;
        # $type = 2
        #     if $line =~ /<ul id="collocations">/;
        # $type = 3
        #     if $line =~ /<ul id="related_info">/;

        # if ($line =~ /<li>(.*)<\/li>/) {
        #     unless ($1 eq "(No information.)" or
        #             $1 eq "(No examples.)" or
        #             $1 eq "(No examples)") {

        #         my $tmpValue = $1;
        #         $tmpValue =~ s/640 ?BC\?##151;546 ?BC\?/640 BC\.-546 BC\./g;
        #         $tmpValue =~ s/##151;/\-/g;
        #         while ($tmpValue =~ /(##(\d+);)/g) {

        #             my $dNum = $2;
        #             my $htmlVar = $1;
        #             my $utf8Var = encode("utf-8",chr(hex("0x".sprintf("%X",$dNum))));
        #             $tmpValue =~ s/$htmlVar/$utf8Var/g;
        #         }
        #         $tmpValue =~ s/<.+?>//g;
        #         $tmpValue =~ s/\xA1\xEA/￡/g;
        #         $tmpValue =~ s/^\s+|\s+$//g;

        #         push(@tmpArray,$tmpValue);
        #     }
        # }

        # if ($line =~ /<\/ul>/) {
        #     $type = 0 if @tmpArray == 0;

        #     if ($type == 1) {

        #         @{$body{"example"}} = map {example_getColor($_,$body{"word"},$proWord)} @tmpArray
        #     }
        #     elsif ($type == 2) {

        #         foreach my $var (@tmpArray) {
        #             my %tmpHash;
        #             $tmpHash{"word"} = $var;
        #             push (@{$body{"phrase"}},\%tmpHash);
        #         }
        #     }
        #     elsif ($type == 3) {
        #         @{$body{"info"}} = @tmpArray;
        #     }

        #     $type = 0;
        #     undef @tmpArray;
        # }
        # ~~~
    }
    return %body;
}

sub example_getColor {

    my ($example,$word,$proWord) = @_;
    my $tarExample;

    $word =~ s/\.$/#/g;
    $word =~ s/…|\.|\?|\!//g;
    $word =~ s/\// /g;
    $word =~ s/#$/\./g;

    my @wordData = ();
    my $end = "";
    if ($example =~ /[^\.]$/) {

        $example =~ s/(.)$//;
        $end = $1;
    }else {

        $example =~ s/(\.)$//g;
        $end = ".";
    }
    if ($word eq "be / get stuck in") {

        $tarExample = $example;
        if ($tarExample =~ s/(gets stuck in)/<color>$1<\/color>/g) {}
        elsif ($tarExample =~ s/('s stuck in)/<color>$1<\/color>/g) {}
        elsif ($tarExample =~ s/(getting stuck in)/<color>$1<\/color>/g) {}
        elsif ($tarExample =~ s/(was stuck in)/<color>$1<\/color>/g) {}
        elsif ($tarExample =~ s/(stuck in)/<color>$1<\/color>/g) {}
    }
    elsif ($word eq "be   feel in the mood (for sth   to do sth)") {

        $tarExample = $example;
        $tarExample =~ s/(in the mood for work)/<color>$1<\/color>/g;
        $tarExample =~ s/(in the mood for speaking to her)/<color>$1<\/color>/g;
        $tarExample =~ s/(was)( not )(in the mood to read it)/<color>$1<\/color>$2<color>$3<\/color>/g;
        $tarExample =~ s/(wasn't in the mood to hear of such things)/<color>$1<\/color>/g;
        $tarExample =~ s/(feeling in the mood to take it easy)/<color>$1<\/color>/g; 
    }
    elsif ($word eq "(be) true of   for") {

        $tarExample = $example;
        if ($tarExample =~ s/(is true of)/<color>$1<\/color>/g) {}
        else {
            $tarExample =~ s/('s)/<color>$1<\/color>/g;
            $tarExample =~ s/(true of)/<color>$1<\/color>/g;}
    }
    elsif ($word eq "at the edge of" or 
           $word eq "at the very beginning of" or 
           $word eq "actor" or 
           $word eq "fiancé" or 
           $word eq "dishwasher" or 
           $word eq "visa" or 
           $word eq "in the history of" or 
           $word eq "tentative") {

        $tarExample = $example;
        $tarExample =~ s/($word)/<color>$1<\/color>/g;
    }
    elsif ($word eq "make a deal") {

        $tarExample = $example;
        $tarExample =~ s/($word)/<color>$1<\/color>/g;
        $tarExample =~ s/(made a deal)/<color>$1<\/color>/g;
    }
    elsif ($word eq "get a kick out of") {

        $tarExample = $example;
        $tarExample =~ s/(gets a kick out of)/<color>$1<\/color>/g;
        $tarExample =~ s/(getting a kick out of)/<color>$1<\/color>/g;
        $tarExample =~ s/(get kick out of)/<color>$1<\/color>/g;
        $tarExample =~ s/($word)/<color>$1<\/color>/ig;
    }
    elsif ($word eq "rise to one's feet") {

        $tarExample = $example;
        $tarExample =~ s/(rose to his feet)/<color>$1<\/color>/g;
        $tarExample =~ s/(rose to her feet)/<color>$1<\/color>/g;
        $tarExample =~ s/(rose to my feet)/<color>$1<\/color>/g;
    }
    elsif ($word eq "get tired of doing sth") {

        $tarExample = $example;
        $tarExample =~ s/(got tired of reading)/<color>$1<\/color>/g;
        $tarExample =~ s/(got tired of paying Mike's debts)/<color>$1<\/color>/g;
        $tarExample =~ s/(got tired of waiting)/<color>$1<\/color>/g;
    }
    elsif ($word eq "set fire to") {

        $tarExample = $example;
        $tarExample =~ s/(setting fire to)/<color>$1<\/color>/g;
        $tarExample =~ s/($word)/<color>$1<\/color>/g;
    }
    elsif ($word eq "play a trick on sb.") {

        $tarExample = $example;
        $tarExample =~ s/(played a trick on Michael)/<color>$1<\/color>/g;
        $tarExample =~ s/(play a trick on Mary)/<color>$1<\/color>/g;
        $tarExample =~ s/(played a trick on him)/<color>$1<\/color>/g;
        $tarExample =~ s/($word)/<color>$1<\/color>/g;
    }
    elsif ($word eq "stand for") {

        $tarExample = $example;
        $tarExample =~ s/(standing for)/<color>$1<\/color>/g;
        $tarExample =~ s/(stands for)/<color>$1<\/color>/g;
        $tarExample =~ s/($word)/<color>$1<\/color>/g;
    }
    elsif ($word eq "take the lead") {

        $tarExample = $example;
        $tarExample =~ s/(took the lead)/<color>$1<\/color>/g;
        $tarExample =~ s/(takes the lead)/<color>$1<\/color>/g;
        $tarExample =~ s/($word)/<color>$1<\/color>/g;
    }
    elsif ($word eq "look away from") {

        $tarExample = $example;
        $tarExample =~ s/(looked away from)/<color>$1<\/color>/g;
        $tarExample =~ s/(takes the lead)/<color>$1<\/color>/g;
        $tarExample =~ s/($word)/<color>$1<\/color>/g;
    }
    elsif ($word eq "(be) associated with") {

        $tarExample = $example;
        if ($tarExample =~ s/(are associated with)/<color>$1<\/color>/g) {}
        elsif ($tarExample =~ s/(is)( often )(associated with)/<color>$1<\/color>$2<color>$3<\/color>/g) {}
        elsif ($tarExample =~ s/(be associated with)/<color>$1<\/color>/g) {}
        elsif ($tarExample =~ s/(associated with)/<color>$1<\/color>/g) {}
    }
    elsif ($word eq "appeal to sb.") {

        $tarExample = $example;
        $tarExample =~ s/(appeals to him)/<color>$1<\/color>/g;
        $tarExample =~ s/(appeal to her)/<color>$1<\/color>/g;
        $tarExample =~ s/(appeal to women)/<color>$1<\/color>/g;
        $tarExample =~ s/(appeals to me)/<color>$1<\/color>/g;
        $tarExample =~ s/(appeal to me)/<color>$1<\/color>/g;
    }
    elsif ($word eq "(be) restricted to") {

        $tarExample = $example;
        $tarExample =~ s/(be restricted to)/<color>$1<\/color>/g;
        $tarExample =~ s/(were not restricted to a section of the country)/<color>were<\/color> not <color>restricted to<\/color>/g;
        $tarExample =~ s/(was restricted to)/<color>$1<\/color>/g;
    }
    elsif ($word eq "(be) allergic to") {

        $tarExample = $example;
        $tarExample =~ s/(are allergic to)/<color>$1<\/color>/g;
        $tarExample =~ s/('re allergic to)/<color>$1<\/color>/g;
    }
    elsif ($word eq "(be) blessed with") {

        $tarExample = $example;
        $tarExample =~ s/(are blessed with)/<color>$1<\/color>/g;
        $tarExample =~ s/('m blessed with)/<color>$1<\/color>/g;
        $tarExample =~ s/(was blessed with)/<color>$1<\/color>/g;
        $tarExample =~ s/(been blessed with)/<color>$1<\/color>/g;
        $tarExample =~ s/(Blessed with)/<color>$1<\/color>/g;
    }
    elsif ($word eq "lose touch with") {

        $tarExample = $example;
        $tarExample =~ s/(lost touch with)/<color>$1<\/color>/g;
        $tarExample =~ s/($word)/<color>$1<\/color>/g;
    }
    elsif ($word eq "make a sound") {

        $tarExample = $example;
        $tarExample =~ s/(made a sound)/<color>$1<\/color>/g;
        $tarExample =~ s/($word)/<color>$1<\/color>/g;
    }
    elsif ($word eq "make a breakthrough") {

        $tarExample = $example;
        $tarExample =~ s/(made a breakthrough)/<color>$1<\/color>/g;
        $tarExample =~ s/($word)/<color>$1<\/color>/g;
    }
    elsif ($word eq "be based on") {

        $tarExample = $example;
        $tarExample =~ s/(is based on)/<color>$1<\/color>/g;
        $tarExample =~ s/(were based on)/<color>$1<\/color>/g;
    }
    elsif ($word eq "be used to") {

        $tarExample = $example;
        $tarExample =~ s/(was used to)/<color>$1<\/color>/g;
        $tarExample =~ s/(are used to)/<color>$1<\/color>/g;
        $tarExample =~ s/(were used to)/<color>$1<\/color>/g;
    }
    elsif ($word eq "be likely to do") {

        $tarExample = $example;
        if ($tarExample =~ s/(are not likely to do)/<color>are<\/color> not <color>likely to do<\/color>/g) {}
        elsif ($tarExample =~ s/(are likely to do)/<color>$1<\/color>/g) {}
        elsif ($tarExample =~ s/('s likely to do)/<color>$1<\/color>/g) {}
        elsif ($tarExample =~ s/(likely to do)/<color>$1<\/color>/g) {}
    }
    elsif ($word eq "be considered as") {

        $tarExample = $example;
        if ($tarExample =~ s/(be considered as)/<color>$1<\/color>/g) {}
        elsif ($tarExample =~ s/(was considered as)/<color>$1<\/color>/g) {}
        elsif ($tarExample =~ s/(are considered as)/<color>$1<\/color>/g) {}
        elsif ($tarExample =~ s/(considered as)/<color>$1<\/color>/g) {}
    }
    elsif ($word eq "be connected to") {

        $tarExample = $example;
        if ($tarExample =~ s/(were connected to)/<color>$1<\/color>/g) {}
        elsif ($tarExample =~ s/('s connected to)/<color>$1<\/color>/g) {}
        elsif ($tarExample =~ s/(be connected to)/<color>$1<\/color>/g) {}
        elsif ($tarExample =~ s/(is put in place and connected to)/<color>is<\/color> put in place and <color>connected to<\/color>/g) {}
    }
    elsif ($word eq "It's a great pity that .") {

        $tarExample = $example;
        $tarExample =~ s/(It's a great pity that)/<color>$1<\/color>/ig;
    }
    elsif ($word eq "in a  voice") {

        $tarExample = $example;
        if ($tarExample =~ s/(in a voice)/<color>$1<\/color>/ig) {}
        else {
            $tarExample =~ s/(in a)/<color>$1<\/color>/ig;
            $tarExample =~ s/(voice)/<color>$1<\/color>/ig;
        }
    }
    elsif ($word eq "bring sth to the attention of sb.") {

        $tarExample = $example;
        $tarExample =~ s/(brought.*public)/<color>$1<\/color>/ig;
        $tarExample =~ s/(bring.*reader)/<color>$1<\/color>/ig;
        $tarExample =~ s/(bring.*world)/<color>$1<\/color>/ig;
    }
    elsif ($word eq "café") {

        $tarExample = $example;
        $tarExample =~ s/(café)/<color>$1<\/color>/ig;  
    }
    elsif ($word eq "participant") {

        $tarExample = $example;
        if ($tarExample =~ s/(participants')/<color>$1<\/color>/ig) {}
        elsif ($tarExample =~ s/(participants)/<color>$1<\/color>/ig) {}
        elsif ($tarExample =~ s/($word)/<color>$1<\/color>/ig) {}
    }
    elsif ($word eq "statesman") {

        $tarExample = $example;
        $tarExample =~ s/(statesman)/<color>$1<\/color>/ig;
        $tarExample =~ s/(statesmen)/<color>$1<\/color>/ig;
    }
    elsif ($word eq "delicacy") {

        $tarExample = $example;
        $tarExample =~ s/(delicacies)/<color>$1<\/color>/ig;
        $tarExample =~ s/(delicacy)/<color>$1<\/color>/ig;
    }
    elsif ($word eq "omit") {

        $tarExample = $example;
        if ($tarExample =~ s/(omitted)/<color>$1<\/color>/ig) {}
        elsif ($tarExample =~ s/(omitting)/<color>$1<\/color>/ig) {}
        elsif ($tarExample =~ s/(omit)/<color>$1<\/color>/ig) {}
    }
    elsif ($word eq "settler") {

        $tarExample = $example;
        if ($tarExample =~ s/(settlers')/<color>$1<\/color>/ig) {}
        elsif ($tarExample =~ s/(settlers)/<color>$1<\/color>/ig) {}
    }
    elsif ($word eq "quantity") {

        $tarExample = $example;
        if ($tarExample =~ s/(quantities)/<color>$1<\/color>/ig) {}
        elsif ($tarExample =~ s/(quantity)/<color>$1<\/color>/ig) {}
    }
    elsif ($word eq "shrink") {

        $tarExample = $example;
        $tarExample =~ s/(shrink)/<color>$1<\/color>/ig;
        $tarExample =~ s/(shrunk)/<color>$1<\/color>/ig;
    }
    elsif ($word eq "give life to") {

        $tarExample = $example;
        $tarExample =~ s/(give life to)/<color>$1<\/color>/ig;
        $tarExample =~ s/(gave lives to)/<color>$1<\/color>/ig;
    }
    elsif ($word eq "has a population of") {

        $tarExample = $example;
        $tarExample =~ s/(has a population of)/<color>$1<\/color>/ig;
        $tarExample =~ s/(had a population of)/<color>$1<\/color>/ig;
    }
    elsif ($word eq "sideroad") {

        $tarExample = $example;
        $tarExample =~ s/(side road)/<color>$1<\/color>/ig;
        $tarExample =~ s/(sideroad)/<color>$1<\/color>/ig;
    }
    elsif ($word eq "get tired of doing sth.") {

        $tarExample = $example;
        $tarExample =~ s/(got tired of reading)/<color>$1<\/color>/ig;
        $tarExample =~ s/(got tired of paying Mike's debts)/<color>$1<\/color>/ig;
        $tarExample =~ s/(got tired of waiting)/<color>$1<\/color>/ig;
    }
    elsif ($word eq "(be) nervous about") {

        $tarExample = $example;
        $tarExample =~ s/(was nervous about)/<color>$1<\/color>/ig;
        $tarExample =~ s/(Are you nervous about)/<color>Are<\/color> you <color>nervous about<\/color>/ig;
    }
    elsif ($word eq "come up to") {

        $tarExample = $example;
        $tarExample =~ s/(came up to)/<color>$1<\/color>/ig;
    }
    elsif ($word eq "look around for") {

        $tarExample = $example;
        $tarExample =~ s/(looked around for)/<color>$1<\/color>/ig;
        $tarExample =~ s/(looking around for)/<color>$1<\/color>/ig;
    }
    elsif ($word eq "humorous") {

        $tarExample = $example;
        $tarExample =~ s/(humourous)/<color>$1<\/color>/ig;
    }
    elsif ($word eq "make an impression on sb.") {

        $tarExample = $example;
        $tarExample =~ s/(made a)( deep )(impression on the judges)/<color>$1<\/color>$2<color>$3<\/color>/ig;
        $tarExample =~ s/(made a)( bad )(impression on us)/<color>$1<\/color>$2<color>$3<\/color>/ig;
        $tarExample =~ s/(made an impression on almost everyone)/<color>$1<\/color>/ig;
        $tarExample =~ s/(made a)( deep )(impression on the interviewer)/<color>$1<\/color>$2<color>$3<\/color>/ig;
    }
    elsif ($word eq "for sure") {

        $tarExample = $example;
        $tarExample =~ s/(for sure)/<color>$1<\/color>/ig;
    }
    elsif ($word eq "free of charge") {

        $tarExample = $example;
        $tarExample =~ s/(free of charge)/<color>$1<\/color>/ig;
    }
    elsif ($word eq "trolleybus") {

        $tarExample = $example;
        $tarExample =~ s/(trolleybus)/<color>$1<\/color>/ig;
    }
    elsif ($word eq "be   get stuck in") {

        $tarExample = $example;
        $tarExample =~ s/(gets stuck in)/<color>$1<\/color>/ig;
        $tarExample =~ s/('s stuck in)/<color>$1<\/color>/ig;
        $tarExample =~ s/(getting stuck in)/<color>$1<\/color>/ig;
        $tarExample =~ s/(was stuck in)/<color>$1<\/color>/ig;
        $tarExample =~ s/('re)( still )(stuck in)/<color>$1<\/color>$2<color>$3<\/color>/ig;
    }
    elsif ($word eq "switch on") {

        $tarExample = $example;
        $tarExample =~ s/(switch on)/<color>$1<\/color>/ig;
        $tarExample =~ s/(switched on)/<color>$1<\/color>/ig;
        $tarExample =~ s/(switch)( it )(on)/<color>$1<\/color>$2<color>$3<\/color>/ig;
    }
    elsif ($word eq "facility") {

        $tarExample = $example;
        $tarExample =~ s/(facilities)/<color>$1<\/color>/ig;
        $tarExample =~ s/(facility)/<color>$1<\/color>/ig;
    }
    elsif ($word eq "drug") {

        $tarExample = $example;
        if ($tarExample =~ s/(drugs)/<color>$1<\/color>/ig) {}
        elsif ($tarExample =~ s/(drugged)/<color>$1<\/color>/ig) {}
        elsif ($tarExample =~ s/(drug)/<color>$1<\/color>/ig) {}
    }
    elsif ($word eq "be   feel in the mood (for sth   to do sth)") {

        $tarExample = $example;
        if ($tarExample =~ s/(was)( not )(in the mood to)/<color>$1<\/color>$2<color>$3<\/color>/ig) {}
        elsif ($tarExample =~ s/(wasn't in the mood to)/<color>$1<\/color>/ig) {}
        elsif ($tarExample =~ s/(in the mood for)/<color>$1<\/color>/ig) {}
        elsif ($tarExample =~ s/(feeling in the mood to)/<color>$1<\/color>/ig) {}
    }
    elsif ($word eq "set (a play,novel, etc) in") {

        $tarExample = $example;
        $tarExample =~ s/(sets a novel in)/<color>$1<\/color>/ig;
        $tarExample =~ s/(set in)/<color>$1<\/color>/ig;
    }
    elsif ($word =~ /be concerned about sth/) {

        $tarExample = $example;
        if ($tarExample =~ s/(was)( always )(concerned about her weight)/<color>$1<\/color>$2<color>$3<\/color>/ig) {}
        elsif ($tarExample =~ s/(is concerned about how little food I eat)/<color>$1<\/color>/ig) {}
        elsif ($tarExample =~ s/(are concerned about is money)/<color>$1<\/color>/ig) {}
        elsif ($tarExample =~ s/(were concerned about the workers)/<color>$1<\/color>/ig) {}
        elsif ($tarExample =~ s/(were concerned about the final examination)/<color>$1<\/color>/ig) {}
    }
    elsif ($word eq "nod") {

        $tarExample = $example;
        $tarExample =~ s/(nodded)/<color>$1<\/color>/ig;
    }
    elsif ($word eq "(be) aware of") {

        $tarExample = $example;
        if ($tarExample =~ s/(was)( acutely )(aware of)/<color>$1<\/color>$2<color>$3<\/color>/ig) {}
        elsif ($tarExample =~ s/(been aware of)/<color>$1<\/color>/ig) {}
        elsif ($tarExample =~ s/(are)( not )(aware of)/<color>$1<\/color>$2<color>$3<\/color>/ig) {}
    }
    elsif ($word eq "criticism") {

        $tarExample = $example;
        $tarExample =~ s/(criticism)/<color>$1<\/color>/ig;
    }
    elsif ($word eq "bring  back to life") {

        $tarExample = $example;
        $tarExample =~ s/(bring)/<color>$1<\/color>/ig;
        $tarExample =~ s/(back to life)/<color>$1<\/color>/ig;
    }
    elsif ($word =~ /There's no doubt that /) {

        $tarExample = $example;
        $tarExample =~ s/(There is no doubt that)/<color>$1<\/color>/ig;
    }
    elsif ($word eq "fish") {

        $tarExample = $example;
        $tarExample =~ s/(fishing)/<color>$1<\/color>/ig;
    }
    elsif ($word =~ /at the mercy of /) {

        $tarExample = $example;
        $tarExample =~ s/(at the mercy of)/<color>$1<\/color>/ig;
        $tarExample =~ s/(at)( his )(mercy)/<color>$1<\/color>$2<color>$3<\/color>/ig;
    }
    elsif ($word =~ /accuse sb of doing sth/) {

        $tarExample = $example;
        $tarExample =~ s/(accused of robbery and attempted murder)/<color>$1<\/color>/ig;
        $tarExample =~ s/(accused me)( last night )(of two very different offences)/<color>$1<\/color>$2<color>$3<\/color>/ig;
        $tarExample =~ s/(accused of)( not )(telling the truth)/<color>$1<\/color>$2<color>$3<\/color>/ig;
    }
    elsif ($word =~ /earn one's living/) {

        $tarExample = $example;
        $tarExample =~ s/(earn his living)/<color>$1<\/color>/ig;
    }
    elsif ($word =~ /have difficulty \(in\) doing sth./) {

        $tarExample = $example;
        $tarExample =~ s/(had)( great )(difficulty in pretending to be amused by the letter)/<color>$1<\/color>$2<color>$3<\/color>/ig;
        $tarExample =~ s/(had)( no )(difficulty in arranging to stay at Ferndean that night)/<color>$1<\/color>$2<color>$3<\/color>/ig;
        $tarExample =~ s/(had difficulty in believing that a man who lived by buying and selling could be so well-mannered and agreeable)/<color>$1<\/color>/ig;
        $tarExample =~ s/(have difficulty walking properly when they get home)/<color>$1<\/color>/ig;
        $tarExample =~ s/(having difficulty training this young dog)/<color>$1<\/color>/ig;
    }
    elsif ($word =~ /make one's fortune/) {

        $tarExample = $example;
        $tarExample =~ s/(make his fortune)/<color>$1<\/color>/ig;
        $tarExample =~ s/(make their fortune)/<color>$1<\/color>/ig;
        $tarExample =~ s/(made their fortunes)/<color>$1<\/color>/ig;
    }
    elsif ($word =~ /cheer sb up/) {

        $tarExample = $example;
        $tarExample =~ s/(cheer you up)/<color>$1<\/color>/ig;
        $tarExample =~ s/(cheered themselves up)/<color>$1<\/color>/ig;
        $tarExample =~ s/(cheered her up)/<color>$1<\/color>/ig;
    }
    elsif ($word =~ /approve of sth./) {

        $tarExample = $example;
        $tarExample =~ s/(approve of what I was doing)/<color>$1<\/color>/ig;
        $tarExample =~ s/(approved of his marriage)/<color>$1<\/color>/ig;
        $tarExample =~ s/(approved of my correct behaviour)/<color>$1<\/color>/ig;
    }
    elsif ($word =~ /let sb down/) {

        $tarExample = $example;
        $tarExample =~ s/(let me down)/<color>$1<\/color>/ig;
        $tarExample =~ s/(let them down)/<color>$1<\/color>/ig;
        $tarExample =~ s/(let her down)/<color>$1<\/color>/ig;
    }
    elsif ($word =~ /get down to sth./) {

        $tarExample = $example;
        $tarExample =~ s/(get down to business)/<color>$1<\/color>/ig;
        $tarExample =~ s/(got down to details)/<color>$1<\/color>/ig;
        $tarExample =~ s/(get down to the end of the document)/<color>$1<\/color>/ig;
    }
    elsif ($word =~ /leave sth behind/) {

        $tarExample = $example;
        $tarExample =~ s/(left behind)/<color>$1<\/color>/ig;
        $tarExample =~ s/(leave it behind)/<color>$1<\/color>/ig;
    }
    elsif ($word =~ /remind sb of sth./) {

        $tarExample = $example;
        $tarExample =~ s/(reminded us of the barge captain)/<color>$1<\/color>/ig;
        $tarExample =~ s/(reminds me of our first date)/<color>$1<\/color>/ig;
        $tarExample =~ s/(reminded of those other black birds)/<color>$1<\/color>/ig;
        $tarExample =~ s/(reminded me of the young servant)/<color>$1<\/color>/ig;
    }
    elsif ($word =~ /to one's astonishment/) {

        $tarExample = $example;
        $tarExample =~ s/(To .* astonishment)/<color>$1<\/color>/ig;
    }
    elsif ($word =~ /from the bottom of one's heart/) {

        $tarExample = $example;
        $tarExample =~ s/(from the bottom of .* heart)/<color>$1<\/color>/ig;
    }
    elsif ($word =~ /look back over one's shoulder/) {

        $tarExample = $example;
        $tarExample =~ s/(looked back over .* shoulder)/<color>$1<\/color>/ig;
    }
    elsif ($word =~ /keep one's eyes on/) {

        $tarExample = $example;
        $tarExample =~ s/(Keep your eyes on)/<color>$1<\/color>/ig;
        $tarExample =~ s/(kept his eyes on)/<color>$1<\/color>/ig;
    }
    elsif ($word =~ /have an effect on/) {

        $tarExample = $example;
        $tarExample =~ s/((have|had) a)( (terrible|great|strong) )(effect on)/<color>$1<\/color>$3<color>$5<\/color>/ig;
    }
    elsif ($word =~ /throw oneself on/) {

        $tarExample = $example;
        $tarExample =~ s/(threw himself on)/<color>$1<\/color>/ig;
    }
    elsif ($word =~ /stocking/) {

        $tarExample = $example;
        if ($tarExample =~ s/(stockings)/<color>$1<\/color>/ig) {}
        elsif ($tarExample =~ s/(stocking)/<color>$1<\/color>/ig) {}
    }
    else {

        $example =~ s/\-/ \- /g if $word !~ /\-/;
        $example =~ s/\(/&% /g;
        $example =~ s/\)/ %&/g;
        $example =~ s/(<.+?>)/ $1 /g;
        my @exmpData = split / /,$example;
	
        if ($word =~ /=/) {

            @wordData = split /=| /,$word;
            @wordData = map {$_ =~ s/^ | $//;$_} @wordData;
        }elsif ($word =~ /\(/) {

            $word =~ /(.*)\((.*)\)(.*)/;
            my $tmpWord1 = $1.$3;
            my $tmpWord2 = $1.$2.$3;

            my @wordData1 = split / /,$tmpWord1;
            my @wordData2 = split / /,$tmpWord2;

            @wordData = (@wordData1,@wordData2);
        }else {
	    
            @wordData = split / /,$word;
        }
        
        my @finalWordData;
        foreach my $var (@wordData) {

            push @finalWordData,$var;
            push @finalWordData,$var."'s";
            push @finalWordData,$var."'m";
            $var =~ s/e$//g;
            push @finalWordData,$var."s";
            push @finalWordData,$var."es";
            push @finalWordData,$var."ed";
            push @finalWordData,$var."ing";
        }

        foreach my $varExample (@exmpData) {

            my $flag = 1;
            my $tmpVarExample = $varExample;
            $tmpVarExample =~ s/"|,|\.|\?|!|:|;//g;
            say $tmpVarExample if $word eq "nod";
            foreach my $varWord (@finalWordData) {
                $varWord =~ s/[^A-Za-z0-9]$//g;
                if ($flag) {
                    my $lcVarExample = lc $varExample;
                    if ($varWord =~ /^$tmpVarExample$/i or 
                        (exists ${$proWord}{$lcVarExample} and ($varWord =~ /^${$proWord}{$lcVarExample}$/i))
                       ) {

                        $varExample =~ s/($tmpVarExample)/<color>$1<\/color>/g;
                        $tarExample .= "$varExample ";
                        $flag = 0;
                    }
                }
            }

            $tarExample .= "$varExample " if $flag;
        }
        if ($word !~ /'/) {

            $tarExample =~ s/'(\w+)<\/color>/<\/color>'$1/g;
        }
        $tarExample =~ s/<\/color> <color>/ /g;
        $tarExample =~ s/<\/color> \- <color>/\-/g;
        
        my @checkData = ();
        if ($word =~ /(.*) = (.*)/) {

            push @checkData,$1;
            push @checkData,$2;
        }
        else {

            @checkData = ($word);
        }
        foreach $word (@checkData) {

            if ($tarExample =~ s/<color>($word)<\/color>/@#$1#@/ig or 
                $tarExample =~ s/<color>(.* )?($word)<\/color>/$1@#$2#@/ig or
                $tarExample =~ s/<color>($word)( .*)?<\/color>/$1@#$2#@/ig){

                $tarExample =~ s/(<color>)|(<\/color>)//g;
                $tarExample =~ s/@#/<color>/g;
                $tarExample =~ s/#@/<\/color>/g;
            }
        }
    }
    $tarExample =~ s/ \- /\-/g;
    $tarExample =~ s/ $//g;
    $tarExample =~ s/ <color>  <\/color> //g;
    $tarExample =~ s/ {2,}/ /g;
    $tarExample =~ s/&% /\(/g;
    $tarExample =~ s/ %&/\)/g;

    $tarExample .= $end;
    $tarExample =~ s/([\.\?\!])\.$/$1/g;
    $tarExample =~ s/([a-zA-Z])$/$1\./g;
    $tarExample =~ s/(<[^\/]+?>) /$1/g;
    $tarExample =~ s/ (<\/.+?>)/$1/g;
    return $tarExample;
}

#查找json文件列表
sub get_tidy_list {
    my $dir = $File::Find::name;
    unless (-d $dir) {
        print FL "$dir\n"
            if $dir =~ /_tidy_data.txt$/;
    }
}

#处理高中题目
sub get_questions {

    my ($file,$out,$quesDBRef) = @_;

    my $jsonCoder = new JSON;

    $file =~ /sh(\d+)/;
    my $flag = $1;
    my @tmpQuestions = get_QA($file);
    open IN ,"< $file", or die $!;
    open OUT ,"> $out", or die $!;
    my $num = 1;
    while (<IN>) {
        my $item = $jsonCoder->decode($_);
        my %item = %{$item};

        my @tmpQue = correct_QA(\@tmpQuestions,$item,$quesDBRef);
        my @questions;

        my %checkHash;
        $checkHash{$item{"word"}} = 1;
        my $paraphrase = GetAllParaphrase($item{"paraphrase"});
        $checkHash{$paraphrase} = 1;
        while ($paraphrase =~ s/([\x80-\xff]+)//) {
            my $tmpData = decode("utf8",$1);
            my $a = decode("utf8","；|，|！|？");
            $tmpData =~ s/$a/#/g;
            map {$checkHash{$_} = 1;} split /#/,encode("utf8",$tmpData);
        }

        foreach my $var (@tmpQue) {
            my $quesFlag = 1;
            if (!exists $checkHash{${$var}{"word"}} and
                !exists $checkHash{${$var}{"def"}}){
                my $tmpFullDef = ${$var}{"def"};
                my @tmpDefAry = ();
                
                while ($tmpFullDef =~ s/([\x80-\xff]+)//) {
                    my $tmpData = decode("utf8",$1);
                    my $a = decode("utf8","；|，|！|？|（|）|：");
                    $tmpData =~ s/$a/#/g;
                    foreach my $tmpDef (split /#/,encode("utf8",$tmpData)) {
                        if (exists $checkHash{$tmpDef}) {
                            $quesFlag = 0;
                            last;
                        } else {
                            push @tmpDefAry,$tmpDef;
                        }
                    }
                }
                if ($quesFlag) {
                    $checkHash{${$var}{"word"}} = 1;
                    $checkHash{${$var}{"def"}} = 1;
                    map {$checkHash{$_} = 1;} @tmpDefAry;
                    push @questions,$var;
                }
            }
        }
        my @ques;
        ##########_Q1_##########
        my %quesOne;
        $quesOne{"type"} = 1;
        $quesOne{"answer"} = $item{"word"};

        my %q1Option1;

        $q1Option1{"word"} = $item{"word"};
        $q1Option1{"def"} = GetAllParaphrase($item{"paraphrase"});
        $q1Option1{"img"} = $item{"img"}
            if exists ($item{"img"});

        my @tmpQ1Options;
        push @tmpQ1Options,\%q1Option1;
        my $desArray1 = desired(\@questions,2);
        push @tmpQ1Options,@{$desArray1};

        @tmpQ1Options = rand_array(@tmpQ1Options);
        $quesOne{"option"} = \@tmpQ1Options;
        $quesOne{"pron"} = $item{"pron"};
        
        push @ques,\%quesOne;
        ##########_Q2_##########

        my %quesTwo;
        $quesTwo{"type"} = 2; 
        ${$quesTwo{"answer"}}{"word"} = $item{"word"};
        ${$quesTwo{"answer"}}{"def"} = GetAllParaphrase($item{"paraphrase"});
        # ${$quesTwo{"answer"}}{"def"} = ${${$item{"sense"}}[0]}{"def"};
        # $quesTwo{"option"} = \@tarArray;
        $quesTwo{"pron"} = $item{"pron"};

        push @ques,\%quesTwo;

        ##########_Q3_########## 暂时不用
        # else {

        #     # ${${$item{"questions"}}{"3"}}{"answer"} = $item{"word"};
        #     # ${${$item{"questions"}}{"3"}}{"pron"} = ${$item{"pron"}}{"aw"};
        #     my %quesThree;
        #     $quesThree{"type"} = 3;
        #     my $tmpVar = $item{"word"};
        #     $tmpVar =~ s/[^A-Za-z]//g;
        #     ${$quesThree{"answer"}}{"word"} = $tmpVar;
        #     ${$quesThree{"answer"}}{"def"} = ${${$item{"sense"}}[0]}{"def"};
        #     $quesThree{"pron"} = $item{"pron"};

        ##########_Q5_##########
       
        my %quesFive;
        $quesFive{"type"} = 5;
        ${$quesFive{"answer"}}{"word"} = $item{"word"};
        ${$quesFive{"answer"}}{"def"} = GetAllParaphrase($item{"paraphrase"});

        # ${$quesFive{"answer"}}{"def"} = ${$item{"sense"}[0]}{"def"};

        my %q5Option1; 

        $q5Option1{"word"} = $item{"word"};
        $q5Option1{"def"} = ${$quesFive{"answer"}}{"def"};
        # $q5Option1{"def"} = ${$item{"sense"}[0]}{"def"};
        $q5Option1{"img"} = $item{"img"}
            if exists ($item{"img"});

        my @tmpQ5Options;
        push @tmpQ5Options,\%q5Option1;
        my $desArray5 = desired(\@questions,2);
        push @tmpQ5Options,@{$desArray5};

        @tmpQ5Options = rand_array(@tmpQ5Options);
        foreach my $q5 (@tmpQ5Options) {

            my %q5OptionHash;
            $q5OptionHash{"def"} = ${$q5}{"def"};
            push @{$quesFive{"option"}},\%q5OptionHash;
        }
        
        push @ques,\%quesFive;

        ##########_Q6_##########
        my %quesSix;
        $quesSix{"type"} = 6;
        $quesSix{"answer"} = $item{"word"};
        $quesSix{"pron"} = $item{"pron"};

        push @ques,\%quesSix;

        ##########_Q7_##########
        my %quesSeven = %quesFive;
        $quesSeven{"type"} = 7; #类型同5 为规避使用7

        push @ques,\%quesSeven;
        ##########__##########
        $item{"questions"} = \@ques;
        print OUT $jsonCoder->encode(\%item)."\n";
    }

    close IN;
    close OUT;
}

#处理问题
sub get_QA {
    my ($in) = @_;
    my $jsonCoder = new JSON;
    my @one;

    open IN ,"< $in", or die $!;
    while (<IN>) {
        my $item = $jsonCoder->decode($_);
        my %item = %{$item};
        my %question;

        $question{"word"} = $item{"word"};
        $question{"index"} = $item{"index"};
        $question{"def"} = GetAllParaphrase($item{"paraphrase"});
        $question{"img"} = $item{"img"}
            if exists($item{"img"});

        push(@one,\%question);
    }
    close IN;
    return @one;
}

#处理题库数据
sub correct_QA {

    my ($qArray,$item,$quesDB) = @_;

    my $indexNum = ${$item}{"index"};

    my %tmpDBDate;
    $tmpDBDate{"word"} = ${$item}{"word"};
    $tmpDBDate{"def"} = GetAllParaphrase(${$item}{"paraphrase"});
    # $tmpDBDate{"def"} = ${${${$item}{"sense"}}[0]}{"def"};
    $tmpDBDate{"index"} = ${$item}{"index"};
    $tmpDBDate{"img"} = ${$item}{"img"}    if exists ${$item}{"img"};

    @{$quesDB} = @{$qArray}[0 .. 9]    if @{$quesDB} < 10;
    push @{$quesDB},\%tmpDBDate;
    shift @{$quesDB}   if @{$quesDB} > 50;

    my @qArray = @{$qArray};

    my @ultArray;

    foreach my $var (@qArray) {

        my $tmpIndex = ${$var}{"index"};
       
        if ($tmpIndex <= $indexNum) {
            push @ultArray,$var;
        }else {
            next;
        }
    }

    if (@ultArray < 50) {

        for (0 .. $#{$quesDB}) {

            last unless @ultArray < 50;
            my $random = int rand @{$quesDB};
            push @ultArray,${$quesDB}[$random];
        }
    }
    my $quantity = int @ultArray/4;
    for (1 .. $quantity) {

        my $num = int rand @{$quesDB};
        push @ultArray,${$quesDB}[$num];
    }

    my @tagArray = ();
    my %delRepHash;

    foreach my $varData (@ultArray) {

        unless (exists $delRepHash{$varData}) {

            push @tagArray,$varData;
            $delRepHash{$varData} = 1;
        }
    }
    return @tagArray;
}

sub rand_array {

    my (@array) = @_;
    my $jsonCoder = new JSON;

    my @num = (0 .. @array-1);

    for my $x (0 .. @array-1) {

        my $y = int(rand(@array-1));
        redo
            if $x == $y and !(@num ~~ /$y/);

        if (ref($array[$x]) eq 'HASH') {
            my %tmp = %{$array[$x]};
            $array[$x] = $array[$y];
            $array[$y] = \%tmp;
        }else{
            my $tmp = $array[$x];
            $array[$x] = $array[$y];
            $array[$y] = $tmp;
        }

        @num = grep(/$y/,@num);
       
    }

    return @array;
}

sub desired {

    my ($array,$quantity) = @_;

    my @tarArray;
    my %flagHash;
    # my @tmpArray = @{$array};

    for (1 .. $quantity) {

        my $randNum = int rand @{$array};
        my %tmpData;

        $tmpData{"word"} = ${${$array}[$randNum]}{"word"};
        $tmpData{"def"} = ${${$array}[$randNum]}{"def"};
        $tmpData{"img"} = ${${$array}[$randNum]}{"img"}
            if exists ${${$array}[$randNum]}{"img"};
        push @tarArray,\%tmpData;
        my @foundlist = splice @{$array},$randNum,1;

        # if (!exists $flagHash{$tmpData{"word"}}) {

        #     $flagHash{$tmpData{"word"}} = 1;
        # }else {

        #     redo;
        # }
    }

    return \@tarArray;
}

sub GetAllParaphrase {

    my $paraphraseArray = shift;
    my $paraphrase = "";

    foreach my $tmpData (@{$paraphraseArray}) {

        $paraphrase .= " ".${$tmpData}{"pos"} if exists ${$tmpData}{"pos"};
        $paraphrase .= " ".${$tmpData}{"chn"} if exists ${$tmpData}{"chn"};
        $paraphrase .= " ".${$tmpData}{"eng"} if exists ${$tmpData}{"eng"};
        $paraphrase .= "<br>";
    }
    $paraphrase =~ s/ {2,}/ /g;
    $paraphrase =~ s/^ //g;
    $paraphrase =~ s/<br> /<br>/g;
    $paraphrase =~ s/<br>$//;
    $paraphrase =~ s/ $//;

    return $paraphrase;
}
