use warnings;
use strict;
use Encode;
use Data::Dumper;
use JSON;
use feature qw(say);

my $json = new JSON;

# GetDetailsFull();
GetStc_Des();

sub GetDetailsFull {
    my $tmp_file = "./tmp_data/shjd_hychsccj_tmp_details.txt";
    my $final_file = "./final_data/shjd_hychsccj_details_full.txt";
    open my $IN ,"<", $tmp_file or die $!;
    open my $OUT ,">", $final_file or die $!;

    my $uwidCorp = 18;       # 上海交大
    my $uwidLen = 1;         # 0x00
    my $uwidSubDict = 200;   # 韩国语词汇手册
    my $uwidBase = ($uwidCorp << 26) | ($uwidLen << 24) | ($uwidSubDict << 16);
    my $uwidCount = 0;
    
    while (<$IN>) {
        my $line = $_;
        my %item = ();
        $item{"body"} = $json->decode($line);
        
        # get key
        my $key = $item{"body"}{"word"};
        $item{"key"} = $key;
        
        # get uwid
        my $prev = 0;
        my $uwid = $uwidBase + $uwidCount;
        my $next = 0;
        if ($. == 1) {
            $next = $uwid + 1;
        } elsif (eof) {
            $prev = $uwid - 1;
        } else {
            $prev = $uwid - 1;
            $next = $uwid + 1;
        }
        $uwidCount++;
        $item{"prev"} = $prev if $prev;
        $item{"uwid"} = $uwid;
        $item{"next"} = $next if $next;

        say $OUT $key."\t".$uwid."\t".$json->encode(\%item);
    }
    
    close $IN;
    close $OUT;
};

sub GetStc_Des {
    my $tmp_file = "./tmp_data/shjd_hychsccj_tmp_struct.txt";
    my $stc_file = "./final_data/shjd_hychsccj.studystructure.txt";
    my $des_file = "./final_data/shjd_hychsccj.studydescription.txt";

    open my $TMP ,"<", $tmp_file or die $!;
    open my $STC ,">", $stc_file or die $!;
    open my $DES ,">", $des_file or die $!;

    my %indexHash = ("a" => 0, "b" => "0");
    my $key = "";
    my $prevLayer = "";
    my $count = "";
    my %structure = ();
    my %description = ();
    while (<$TMP>) {
        my $line = $_;
        if ($line =~ /==> (\d+)/) {
            $count = $1;
            next unless $count;
            # print
            say $STC $key.$json->encode(\%structure);
            say $DES $key.$json->encode(\%description);
        } else {
            %structure = ();
            $line =~ /(.+?)\t(.*)\t(\d+)/;
            my $layer = $1;
            my $name = $2;
            my $num = $3;
            $name =~ s/\t/ /g;

            # key
            $indexHash{$layer} = $num;
            if ($layer eq "a") {
                $key = "kc_kc".$layer.sprintf("%02s",$num);
                $prevLayer = $key;
            } else {
                $key = $prevLayer."_kc".$layer.sprintf("%02s",$num);
            }
            $structure{"id"} = $key;
            $description{"id"} = $key;
            
            # parent_id
            $structure{"parent_id"} = $prevLayer;
            
            # word
            $description{"word"} = $name;

            # children num
            $description{"childrennum"} = $count;
        }
    }
    
    close $TMP;
    close $STC;
    close $DES;
};
