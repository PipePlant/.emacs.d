use strict;
use warnings;
use Data::Dumper;
use Encode;
use JSON;
use Storable;
use Digest::MD5 'md5_hex';
use Time::HiRes qw (time alarm sleep);
use feature qw (say);
my $begin = time();
#require "E:/eclipse_c++/common/step0_changeName.pl";
#my $dictName     = dictName();
my $dictName = "hdlg_dzyyqlx";
my $root = "D:/project/$dictName/final_data/";
my $in = $root.$dictName."_details_full.txt";
my $out_path = $root."../".$dictName."txt/";

open IN ,"<", $in  or die $!;
my $jsonCoder = new JSON();
#下载课程的类型，分为a,b,c,d...,需手动配置
my $type = "a";

my $kcID = 0;
my $tmp_kcID = "";
my $txt_path = "";
mkdir $out_path if (!-e $out_path);
while(<IN>)
{
	chomp;
	my %hash = ();
	my $line = $_;
	my @item = split /\t/,$line;
	my $json = $jsonCoder->decode($item[2]);
	my %json = %{$json};
	my $ts = substr(md5_hex($item[2]),0,4);
	$hash{'ts'} = $ts;
	$hash{'uwid'} = $json{'uwid'};
	$hash{'key'} = $json{'key'};
	$hash{'json'} = \%json;
	
	my $jsonCode = new JSON();
	my $json1 = $jsonCode->encode(\%hash);
	$item[0] =~ /kc_kca(.+?)(_kcb(.+?))?(_kcc(.+?))?(_kcd(.+?))?_/;
	if($type eq "a"){
		$tmp_kcID = $1;
		$txt_path = sprintf("%sdetials_kca%s.txt",
		($out_path,$1));
	}elsif($type eq "b"){
		$tmp_kcID = $1.$3;
		$txt_path = sprintf("%sdetials_kca%s_kcb%s.txt",
		($out_path,$1,$3));
	}elsif($type eq "c"){
		$tmp_kcID = $1.$3.$5;
		$txt_path = sprintf("%sdetials_kca%s_kcb%s_kcc%s.txt",
		($out_path,$1,$3,$5));
	}elsif($type eq "d"){
		$tmp_kcID = $1.$3.$5.$7;
		$txt_path = sprintf("%sdetials_kca%s_kcb%s_kcc%s_kcd%s.txt",
		($out_path,$1,$3,$5,$7));
	}else{
		print "\$type值有误，请检查！！！\n";
	}
	
	if($kcID eq $tmp_kcID)
	{	
		my $uwid = $hash{'uwid'};
		print OUT $uwid."\t".$hash{'ts'}."\t".$hash{'key'}."\t".$json1."\n";
	}else{
		close OUT;
		$kcID = $tmp_kcID;
		print $kcID."-->".$txt_path."\n";
		open OUT, ">", $txt_path or die $!;
		my $uwid = $hash{'uwid'};
		print OUT $uwid."\t".$hash{'ts'}."\t".$hash{'key'}."\t".$json1."\n";
	}
}

my $end = time();
my $run = sprintf("%.2f",$end - $begin);
print "运行时间：".$run."秒\n";